{"version":3,"sources":["app.js","account/createAccount.js","account/resetPassword.js","account/signIn.js","ads/ads.js","controllers/universalCtrl.js","email/resend_email.js","req/response_filter.js","services/globals.js","adirectives/banners/bannerDir.js","adirectives/banners/universalBanner.js","adirectives/post-topic/post_topic.js","controllers/edit_details_ctrl.js","edit_details/edit-social.js","edit_details/edit_biography.js","edit_details/edit_email.js","edit_details/edit_full_name.js","edit_details/edit_password.js","edit_details/edit_statusLine.js","edit_details/edit_username.js","uploaders/profile_picture_uploader.js"],"names":["trackDigests","app","run","$rootScope","Promise","setScheduler","cb","$evalAsync","angular","module","config","$locationProvider","html5Mode","enabled","directive","$http","restrict","link","$scope","createAccount","details","post","then","resp","data","main","responseStatusHandler","err","registrationDetails","password1","password2","createMain","isBusy","email","firstName","lastName","username","redirect","resetMain","resetFormModel","newPassword","confirmNewPassword","submitResetPasswordEmail","localUserLogin","loginData","resolve","document","referrer","loginFormModel","password","signInMain","submitLocalLoginForm","$element","$attrs","putImageAd","size","adsize","e","html","empty","append","console","log","toString","display","s","words","width","$","window","indexOf","localStorageServiceProvider","setPrefix","setStorageCookieDomain","location","hostname","search","setStorageType","controller","$filter","$window","$location","ngDialog","$anchorScroll","$sce","localStorageService","getLocationHost","port","userLocationData","getUserLocationData","reject","getNewLocationData","found","locationData","temp","country","address","saveKeyToCookie","geoError","geolocator","locateByIP","checkCookieIsEnabled","loc","getKeyFromCookie","hasOwnProperty","msg","checkLocalStorageSupport","isSupported","cookie","saveToLocalStorage","key","val","object","value","timestamp","Date","getTime","set","getFromLocalStorage","maxAgeSeconds","checkIfExistsOnLocalStorage","get","dateString","now","removeFromLocalStorage","maxAgeInDays","JSON","stringify","removeKeyFromCookie","keys","len","length","exists","i","keyArray","all","clearAll","forEach","remove","windowWidth","bootStrapWidth","parseInt","trustAsHtml","intersectionArray","arr1","arr2","_","intersection","getAmazonS3Url","keyWithoutSlash","domain","defaultProfilePicture","isAdmin","user","arr","adminLevels","assetsDomainWithSlash","goToTop","hash","back","showToast","type","clearBanners","$broadcast","redirectToAbout","href","redirectToLogin","reloadPage","reload","redirectToHome","redirectToPage","pathWithFirstSlash","redirectToPreviousPage","showExecuting","message","open","templateUrl","className","overlay","showClose","closeByEscape","closeByDocument","cache","trapFocus","preserveFocus","history","resendConfirmationEmail","userUniqueCuid","dialog","success","close","error","filter","$q","$log","makeBanner","show","bannerClass","not_authorized_dialog","template","sign_in_dialog","openConfirm","redirectPage","notify","id","banner","signInBanner","registrationBanner","reason","warn","factory","userData","userDataFromServer","toastr","toastType","text","clear","warning","closeButton","tapToDismiss","timeOut","clearToasts","$on","event","universalBanner","getPostTopic","pageNumber","mainTopicModel","topic","theModel","requestedPage","buttonLoading","topicSearch","element","replaceWith","finishedLoading","errResp","topicObject","parse","model","showMore","button","mainCollapse","fullName","statusLine","biography","collapseAll","t","this","userEditModel","contentHasBeenEdited","isLoading","showSpinner","showDone","busy","done","self","delay","update","obj","getUserData","passwordEditModel","oldPassword","updateUserPassword","$watch","newVal","oldVal","isEdited","p","globals","social","deleteConnectedService","serviceName","code","theUser","updatedUser","FB","getLoginStatus","response","status","logout","fbOptions","credentials","profile","connectToFacebook","login","authResponse","dateConnected","api","permissionsArray","public_profile","permission","Upload","$interval","editBiography","cancelBiography","editEmail","cancelEmail","editFullName","cancelFullName","updatePassword","editStatusLine","cancelStatusLine","editUsername","cancelUsername","incrementUploadingPercent","uploading","percent","uploadProfilePicture","fields","file","uploadImageToServer","progress","evt","loaded","total","headers","hideProgressBars","errResponse","upload","url","selectedFileType","isUploading","progressIntervalPromise","showUploading","cancel","files"],"mappings":"AAAA,QAAAA,cAAAC,GACAA,EAAAC,KAAA,aAAA,SAAAC,GACAC,QAAAC,aAAA,SAAAC,GACAH,EAAAI,WAAAD,QAMA,GAAAL,KAAAO,QAAAC,OAAA,OACA,aACA,eACA,oCACA,cACA,eACA,SACA,WACA,YACA,UACA,uBAEAC,QAAA,oBAAA,SAAAC,GACAA,EAAAC,WACAC,SAAA,MAIAb,cAAAC,KC3BAO,QAAAC,OAAA,OACAK,UAAA,sBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAsBA,QAAAC,GAAAC,GACA,MAAAL,GAAAM,KAAA,iBAAAD,GACAE,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,IACA,IAJAR,SAMA,SAAAY,GAKA,MAJAA,GAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAU,oBAAAC,UAAA,GACAX,EAAAU,oBAAAE,UAAA,IACA,IAjCAZ,EAAAa,YACAC,QAAA,GAGAd,EAAAU,qBACAK,MAAA,GACAC,UAAA,GACAC,SAAA,GACAC,SAAA,GACAP,UAAA,GACAC,UAAA,IAGAZ,EAAAC,cAAA,SAAAkB,GAEA,MADAnB,GAAAa,WAAAC,QAAA,EACAb,EAAAD,EAAAU,oBAAAS,GACAf,KAAA,WACAJ,EAAAa,WAAAC,QAAA,UCtBAxB,QAAAC,OAAA,OACAK,UAAA,sBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAEAA,EAAAoB,WACAN,QAAA,GAGAd,EAAAqB,gBACAN,MAAA,GACAO,YAAA,GACAC,mBAAA,IAIAvB,EAAAwB,yBAAA,WAEA,MADAxB,GAAAoB,UAAAN,QAAA,EACAjB,EAAAM,KAAA,2BAAAH,EAAAqB,gBACAjB,KAAA,SAAAC,GACAA,EAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,KAHAR,SAMA,SAAAY,GACAA,EAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAqB,eAAAN,MAAA,GACAf,EAAAqB,eAAAC,YAAA,GACAtB,EAAAqB,eAAAE,mBAAA,GACAvB,EAAAoB,UAAAN,QAAA,UC/BAxB,QAAAC,OAAA,OACAK,UAAA,eAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAmBA,QAAAyB,GAAAC,EAAAP,GACA,MAAAjC,SAAAyC,UACAvB,KAAA,WACA,MAAAe,GACAtB,EAAAM,KAAA,4BAAAyB,SAAAC,SAAAH,GAEA7B,EAAAM,KAAA,kBAAAuB,KAGAtB,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,IACA,IAXAnB,SAaA,SAAAuB,GAIA,MAHAA,GAAAA,EAAAH,KACAN,EAAA8B,eAAAC,SAAA,GACA9C,EAAAsB,KAAAC,sBAAAC,IACA,IAnCAT,EAAAgC,YACAlB,QAAA,GAGAd,EAAA8B,gBACAZ,SAAA,GACAa,SAAA,IAGA/B,EAAAiC,qBAAA,SAAAd,GAEA,MADAnB,GAAAgC,WAAAlB,QAAA,EACAW,EAAAzB,EAAA8B,eAAAX,GACAf,KAAA,WACAJ,EAAAgC,WAAAlB,QAAA,UCnBAxB,QAAAC,OAAA,OACAK,UAAA,oBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAkBA,QAAAC,KACAlD,QAAAyC,UACAvB,KAAA,WACA,MAAAP,GAAAM,KAAA,mBACAkC,KAAAC,IADAzC,SAGA,SAAA0C,GAGA,KAFAA,GAAAA,EAAAjC,KACArB,EAAAsB,KAAAC,sBAAA+B,GACAA,IAEAnC,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,GACAA,MAGAD,KAAA,SAAAoC,GACAN,EAAAO,QACAP,EAAAQ,OAAAF,KAlBAtD,SAoBA,SAAAqD,GACAI,QAAAC,IAAAL,KAvCA,GAAAD,GAAAH,EAAAG,OAAAO,WACAC,EAAAC,EAAAC,MAAAb,EAAAW,SAEAG,EAAAC,EAAAC,QAAAF,OAEAA,IAAA,MAAAH,EAAAM,QAAA,MAAA,GACAhB,IACAa,GAAA,KAAA,KAAAA,GAAAH,EAAAM,QAAA,MAAA,GACAhB,IACAa,GAAA,KAAA,IAAAA,GAAAH,EAAAM,QAAA,MAAA,GACAhB,IACA,IAAAa,GAAAH,EAAAM,QAAA,MAAA,IACAhB,SCjBA9C,QAAAC,OAAA,OACAC,QAAA,8BAAA,SAAA6D,GACAA,EACAC,UAAA,OACAC,uBAAA,KAAA3B,SAAA4B,SAAAC,SAAAC,OAAA,mBAAA,sBAAA,IACAC,eAAA,mBAGArE,QAAAC,OAAA,OACAqE,WAAA,uBAAA,UAAA,UAAA,YAAA,SAAA,aAAA,WAAA,gBAAA,OAAA,sBAAA,QACA,SAAAC,EAAAC,EAAAC,EAAA/D,EAAAf,EAAA+E,EAAAC,EAAAC,EAAAC,EAAAtE,GA2SA,QAAAuE,KACA,MAAA,KAAAxC,SAAA4B,SAAAC,SAAAC,OAAA,mBACA,4BACA,KAAA9B,SAAA4B,SAAAC,SAAAC,OAAA,aACA,kDAEAK,EAAAM,OACA,oBAAAN,EAAAM,OAEA,mBAlTApF,EAAAsB,MAEA+D,iBAAA,KAEAC,oBAAA,WAUArF,QAAAyC,UACAvB,KAAA,WACA,MAAA,IAAAlB,SAAA,SAAAyC,EAAA6C,GAyBA,QAAAC,KAGA,QAAAC,GAAAC,GAEA,GAAAC,IACAC,QAAAF,EAAAG,QAAAD,QAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAjD,GAAA,GAGA,QAAAqD,GAAAzC,GACA,GAAAqC,IACAC,QAAA,KAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAJ,EAAAjC,GAhBA0C,WAAAC,WAAAR,EAAAM,EAAA,GAxBA,GAAA/F,EAAAsB,KAAA4E,uBAAA,CAEA,GAAAC,IAEAA,EAAAnG,EAAAsB,KAAA8E,iBAAA,eAAA,UACAD,EAAAE,eAAA,YAAAF,EAAAP,QACAlD,GAAA,GAKA8C,QAGA,CACA9B,QAAAC,IAAA,uBACA,IAAAgC,IACAC,QAAA,KAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAjD,GAAA,QAxBAzC,SAiDA,SAAAqD,GACA,IAAAA,EAAAgD,IAIA,KAAAhD,EAHAI,SAAAC,IAAAL,EAAAgD,OAnDArG,SAyDA,SAAAqD,GACAI,QAAAC,IAAAL,MAIAiD,yBAAA,WACA,MAAArB,GAAAsB,aACA,GAEA,GAIAN,qBAAA,WACA,MAAAhB,GAAAuB,OAAAD,aACA,GAEA,GAIAE,mBAAA,SAAAC,EAAAC,GACA,GAAAC,IACAC,MAAAF,EACAG,WAAA,GAAAC,OAAAC,UAEA,OAAA/B,GAAAgC,IAAAP,EAAAE,IAGAM,oBAAA,SAAAR,EAAAS,GAIA,GAHAA,IACAA,EAAA,OAEApH,EAAAsB,KAAA+F,4BAAAV,GAAA,CACA,GAAAE,GAAA3B,EAAAoC,IAAAX,GACAY,EAAAV,EAAAE,UACAS,GAAA,GAAAR,OAAAC,UAAArD,UACA,OAAA4D,GAAAD,EAAA,IAAAH,GACApH,EAAAsB,KAAAmG,wBAAAd,KACA,GAEAE,EAAAC,MAGA,OAAA,GAIAhB,gBAAA,SAAAa,EAAAC,EAAAc,GACAA,IACAA,EAAA,EAEA,IAAAb,IACAC,MAAAF,EACAG,WAAA,GAAAC,OAAAC,UAGA,OADAJ,GAAAc,KAAAC,UAAAf,GACA3B,EAAAuB,OAAAS,IAAAP,EAAAE,EAAAa,IAGAtB,iBAAA,SAAAO,EAAAS,GACAA,IACAA,EAAA,MAEA,IAAAP,GAAA3B,EAAAuB,OAAAa,IAAAX,EACA,IAAAE,EAAA,CACA,GAAAU,GAAAV,EAAAE,UACAS,GAAA,GAAAR,OAAAC,UAAArD,UACA,OAAA4D,GAAAD,EAAA,IAAAH,GACApH,EAAAsB,KAAAuG,oBAAAlB,IACA,GAEAE,EAAAC,MAGA,OAAA,GAIAO,4BAAA,SAAAV,GAIA,IAAA,GAHAmB,GAAA5C,EAAA4C,OACAC,EAAAD,EAAAE,OACAC,GAAA,EACAC,EAAA,EAAAH,EAAAG,EAAAA,IACA,GAAAJ,EAAAI,IAAAvB,EAAA,CACAsB,GAAA,CACA,OAGA,MAAAA,IAGAR,uBAAA,SAAAU,EAAAC,GACA,MAAAA,GACAlD,EAAAmD,YAEAF,EAAAG,QAAA,SAAA3B,GACAzB,EAAAqD,OAAA5B,MAIA,IAGAkB,oBAAA,SAAAlB,GACA,MAAAzB,GAAAuB,OAAA8B,OAAA5B,IAGA6B,YAAAvE,EAAAC,QAAAF,QAEAyE,eAAA,SAAAzE,GAGA,MAFAA,GAAA0E,SAAA1E,GAEAA,GAAA,KACA,KACAA,GAAA,KAAA,KAAAA,EACA,KACAA,GAAA,KAAA,IAAAA,EACA,KACA,IAAAA,EACA,KADA,QAMA2E,YAAA,SAAA7B,GACA,MAAA7B,GAAA0D,YAAA7B,IAGA8B,kBAAA,SAAAC,EAAAC,GACA,MAAAC,GAAAC,aAAAH,EAAAC,IAGAG,eAAA,SAAAC,GACA,GAAAC,GAAA,qCACA,OAAAA,GAAAD,GAGAE,sBAAA,gEAEAC,QAAA,SAAAC,GACA,GAAAC,IAAA,GAAA,IAAA,IACA,OAAA,KAAAD,EAAAE,YAAAxB,QAAA,EAAAe,EAAAC,aAAAM,EAAAE,YAAAD,GAAAvB,OAAA,GAGAyB,sBAAA,WACA,MAAA,uCAGAC,QAAA,WACA5E,EAAA6E,KAAA,WACA3E,KAGA4E,KAAA,WACA5J,EAAA4J,QAGArI,sBAAA,SAAAH,GACAwD,EAAA,kBAAAxD,IAGAyI,UAAA,SAAAC,EAAAxD,GACAtG,EAAA6J,UAAAC,EAAAxD,IAGAyD,aAAA,WACA/J,EAAAgK,WAAA,iBAGAC,gBAAA,WACApF,EAAAN,SAAA2F,KAAA,UAGAC,gBAAA,WACAtF,EAAAN,SAAA2F,KAAA,gBAGAE,WAAA,WACAvF,EAAAN,SAAA8F,UAGAC,eAAA,WACAzF,EAAAN,SAAA2F,KAAA,KAGAK,eAAA,SAAAC,GACA3F,EAAAN,SAAA2F,KAAA/E,IAAAqF,GAGAC,uBAAA,WACAvG,OAAAK,SAAA2F,KAAAvH,SAAAC,UAGA8H,cAAA,SAAAC,GACA,GAAArE,EAOA,OAHAA,GAHAqE,GAAA,gBAAAA,IAAA,IAAAA,EAAA3C,OAGA2C,EAAA,MAFA,uBAKA5F,EAAA6F,MACAvJ,MACAsJ,QAAArE,GAEAuE,YAAA,+BACAC,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,MAMArL,EAAAsB,KAAAgE,sBAEAtF,EAAA4J,KAAA,WACA1F,OAAAoH,QAAA1B,WClTAvJ,QAAAC,OAAA,OACAK,UAAA,oBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAeA,QAAAwK,GAAAC,GACA,MAAA5K,GAAAM,KAAA,4BACAsK,eAAAA,IAfAzK,EAAAwK,wBAAA,SAAAC,GACA,GAAAC,GAAAzL,EAAAsB,KAAAoJ,cAAA,gBACAa,GAAAC,GACAE,QAAA,SAAAtK,GACAqK,EAAAE,QACA3L,EAAAsB,KAAAC,sBAAAH,KAEAwK,MAAA,SAAApK,GACAiK,EAAAE,QACA3L,EAAAsB,KAAAC,sBAAAC,WCfAnB,QAAAC,OAAA,OACAuL,OAAA,kBAAA,KAAA,OAAA,UAAA,aAAA,WAAA,SAAAC,EAAAC,EAAAlH,EAAA7E,EAAA+E,GACA,MAAA,UAAA3D,GACA,QAAA4K,GAAAC,EAAAC,EAAA5F,GACA,OACA2F,KAAAA,GAAA,GAAA,EACAC,YAAAA,EACA5F,IAAAA,GAyDA,QAAA6F,KACApH,EAAA6F,MACAwB,SAAA,8BACAtB,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,IAIA,QAAAgB,GAAA1B,GACA5F,EAAAuH,aACAjL,MACAsJ,QAAAA,GAEAyB,SAAA,uBACAtB,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,IACAlK,KAAA,WACAnB,EAAAsB,KAAAiJ,eAAA,iBACA,WACAvK,EAAAsB,KAAAiJ,eAAA,YApFA,GAAA,OAAAnJ,GAAA,gBAAAA,GAAA,CAeA,GAdAA,EAAAc,UACAd,EAAAmL,eACA1H,EAAAN,SAAA2F,KAAA9I,EAAAmL,cAGAnL,EAAAiJ,QACArK,EAAAsB,KAAA8I,aAEAhJ,EAAAoL,QACApL,EAAA0I,MAAA1I,EAAAkF,KACAtG,EAAA6J,UAAAzI,EAAA0I,KAAA1I,EAAAkF,KAIAlF,EAAAqK,QACArK,EAAAqL,GACA,OAAArL,EAAAqL,IACA,IAAA,iBACAN,GACA,MACA,KAAA,UACAE,EAAAjL,EAAAkF,KAOAlF,EAAAsL,QACAtL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,kBAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAuL,cACAvL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,eAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAwL,oBACAxL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,qBAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAyL,QACAd,EAAAe,KAAA1L,EAAAyL,QAMA,OAAA,MC9DAxM,QAAAC,OAAA,OACAyM,QAAA,WAAA,YAAA,QACA,SAAAjI,EAAAlE,GACA,GAAAoM,KAEA,QAEAA,SAAA,SAAA3L,GACA,MAAAA,GACA2L,EAAA3L,EAGA2L,GAIAC,mBAAA,WACA,MAAArM,GAAA0G,IAAA,qBAGAnC,gBAAA,WACA,MAAA,KAAAxC,SAAA4B,SAAAC,SAAAC,OAAA,mBACA,4BACA,KAAA9B,SAAA4B,SAAAC,SAAAC,OAAA,aACA,kDAEAK,EAAAM,OACA,oBAAAN,EAAAM,OAEA,wBC7BA/E,QAAAC,OAAA,OACAK,UAAA,mBAAA,aAAA,SAAA,SAAAX,EAAAkN,GACA,OACArM,SAAA,KACAC,KAAA,WACAd,EAAA6J,UAAA,SAAAsD,EAAAC,GACA,OAAAD,GACA,IAAA,UACAD,EAAAG,QACAH,EAAAxB,QAAA0B,EACA,MACA,KAAA,UACAF,EAAAG,QACAH,EAAAI,QAAAF,EAAA,WACAG,aAAA,EACAC,cAAA,GAEA,MACA,KAAA,QACAN,EAAAG,QACAH,EAAAtB,MAAAwB,EAAA,SACAG,aAAA,EACAC,cAAA,EACAC,SAAA,GAEA,MACA,SAEAP,EAAAG,UAIArN,EAAA0N,YAAA,WACAR,EAAAG,cAKA1M,UAAA,qBAAA,aAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA4L,cACAV,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,eAAA,SAAAC,EAAAlB,GACA3L,EAAA4L,aAAAD,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA4L,cACAV,MAAA,EACAC,YAAA,GACA5F,IAAA,WAMA3F,UAAA,2BAAA,aAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA6L,oBACAX,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,qBAAA,SAAAC,EAAAlB,GACA3L,EAAA6L,mBAAAF,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA6L,oBACAX,MAAA,EACAC,YAAA,GACA5F,IAAA,WChFAjG,QAAAC,OAAA,OACAK,UAAA,wBAAA,aAAA,UAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA8M,iBACA5B,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,kBAAA,SAAAC,EAAAlB,GACA3L,EAAA8M,gBAAAnB,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA8M,iBACA5B,MAAA,EACAC,YAAA,GACA5F,IAAA,WCnBAjG,QAAAC,OAAA,OACAK,UAAA,kBAAA,aAAA,QAAA,SAAAX,EAAAY,GAEA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAIA,QAAA+M,GAAAC,GACAhN,EAAAiN,gBACAC,MAAAlN,EAAAmN,SAAAD,MACAE,cAAAJ,GAIAhN,EAAAiN,eAAAC,OAAAlN,EAAAiN,eAAAG,gBACApN,EAAAqN,gBACAC,EAAAtN,EAAAiN,gBACAtC,QAAA,SAAAtK,GACApB,EAAAsB,KAAAC,sBAAAH,GACAL,EAAAmN,SAAAH,aACA1N,QAAAiO,QAAA,oBAAAC,YAAAnN,GACAL,EAAAyN,oBAEA5C,MAAA,SAAA6C,GACAzO,EAAAsB,KAAAC,sBAAAkN,GACA1N,EAAAyN,qBAKA,QAAAH,GAAAK,GACA,GAAAT,GAAAS,EAAAT,MACAF,EAAAW,EAAAP,aACA,OAAAvN,GAAA0G,IAAA,kBAAA2G,EAAA,SAAAvF,SAAAqF,IA5BAhN,EAAAmN,SAAAvG,KAAAgH,MAAA5N,EAAA6N,OAgCA7N,EAAA8N,SAAA,WACAf,EAAApF,SAAA3H,EAAAmN,SAAAH,YAAA,IAIAhN,EAAAqN,cAAA,WACAnK,EAAA,gBAAA6K,OAAA,YAEA/N,EAAAyN,gBAAA,WACAvK,EAAA,gBAAA6K,OAAA,eChDAzO,QAAAC,OAAA,OACAqE,WAAA,yBAAA,UAAA,UAAA,YAAA,SAAA,aAAA,QAAA,WACA,SAAAC,EAAAC,EAAAC,EAAA/D,EAAAf,EAAAY,EAAAmE,GAEAhE,EAAAO,MACAyN,cACAC,UAAA,EACAlN,OAAA,EACAG,UAAA,EACAgN,YAAA,EACAC,WAAA,GAGAC,YAAA,WACA,IAAA,GAAAC,KAAAC,MAAAN,aACAM,KAAAN,aAAA1I,eAAA+I,KACAC,KAAAN,aAAAK,IAAA,IAKApC,YACAsC,eACAvN,UAAA,GACAC,SAAA,GACAF,MAAA,GACAG,SAAA,GACAgN,WAAA,GACAC,UAAA,IAGAK,sBAAA,EAEAC,WAAA,EACAC,aAAA,EACAC,UAAA,EACA7N,QAAA,EACA8N,KAAA,WACAN,KAAAI,aAAA,EACAJ,KAAAK,UAAA,EACAL,KAAAxN,QAAA,GAEA+N,KAAA,WACA,GAAAC,GAAAR,IACAQ,GAAAJ,aAAA,EACAI,EAAAhO,QAAA,EACAgO,EAAAH,UAAA,EACAzP,QAAA6P,MAAA,KACA3O,KAAA,WACA0O,EAAAH,UAAA,KAIAK,OAAA,WACA9P,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACA,GAAAwE,KAyBA,OAxBA5E,GAAAO,KAAAgO,cAAAvN,UAAAiG,OAAA,IACArC,EAAA5D,UAAAhB,EAAAO,KAAAgO,cAAAvN,WAGAhB,EAAAO,KAAAgO,cAAAtN,SAAAgG,OAAA,IACArC,EAAA3D,SAAAjB,EAAAO,KAAAgO,cAAAtN,UAGAjB,EAAAO,KAAAgO,cAAAxN,MAAAkG,OAAA,IACArC,EAAA7D,MAAAf,EAAAO,KAAAgO,cAAAxN,OAGAf,EAAAO,KAAAgO,cAAArN,SAAA+F,OAAA,IACArC,EAAA1D,SAAAlB,EAAAO,KAAAgO,cAAArN,UAGAlB,EAAAO,KAAAgO,cAAAL,WAAAjH,OAAA,IACArC,EAAAsJ,WAAAlO,EAAAO,KAAAgO,cAAAL,YAGAlO,EAAAO,KAAAgO,cAAAJ,UAAAlH,OAAA,IACArC,EAAAuJ,UAAAnO,EAAAO,KAAAgO,cAAAJ,WAGAtO,EAAAM,KAAA,0BACAG,KAAAsE,MAGAxE,KAAA,SAAA6O,GAGA,MAFAA,GAAAA,EAAA3O,KACArB,EAAAsB,KAAAC,sBAAAyO,GACAjP,EAAAO,KAAA2O,gBAEA9O,KAAA,WACAJ,EAAAO,KAAA6N,cACApO,EAAAO,KAAAsO,SA1CA3P,SA4CA,SAAAuB,GACAA,EAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAO,KAAAsO,UAIAM,mBACAC,YAAA,GACA9N,YAAA,GACAC,mBAAA,IAGA8N,mBAAA,WACA,MAAAf,MAAAa,kBAAAC,aAAAd,KAAAa,kBAAA7N,aAAAgN,KAAAa,kBAAA5N,mBACArC,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACA,GAAAwE,IACAwK,YAAApP,EAAAO,KAAA4O,kBAAAC,YACA9N,YAAAtB,EAAAO,KAAA4O,kBAAA7N,YACAC,mBAAAvB,EAAAO,KAAA4O,kBAAA5N,mBAEA,OAAA1B,GAAAM,KAAA,2BACAG,KAAAsE,MAGAxE,KAAA,SAAA6O,GACAA,EAAAA,EAAA3O,KACArB,EAAAsB,KAAAC,sBAAAyO,KAEA7O,KAAA,WACAJ,EAAAO,KAAA4O,kBAAAC,YAAA,GACApP,EAAAO,KAAA4O,kBAAA7N,YAAA,GACAtB,EAAAO,KAAA4O,kBAAA5N,mBAAA,GACAvB,EAAAO,KAAAsO,SAvBA3P,SAyBA,SAAAuB,GACAA,EAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAO,KAAAsO,SA7BA,QAkCAK,YAAA,WACA,MAAAhQ,SAAAyC,UACAvB,KAAA,WACA,MAAAP,GAAA0G,IAAA,sBAEAnG,KAAA,SAAA6O,GAEA,MADAA,GAAAA,EAAA3O,KACA2O,EAAAhD,UAGAjM,EAAAO,KAAA0L,SAAAgD,EAAAhD,SACA/M,QAAA6P,MAAA,KACA3O,KAAA,WACAJ,EAAAO,KAAAkO,WAAA,SALAxP,GAAAsB,KAAA6I,sBAYApJ,EAAAO,KAAA2O,cAAAlP,SACA,SAAAS,GACAA,EAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAO,KAAAsO,SAIA7O,EAAAsP,OAAA,WACA,MAAAtP,GAAAO,KAAAyN,cACA,SAAAuB,EAAAC,GACA,GAAAC,IAAA,CACA,IAAAF,EACA,IAAA,GAAAG,KAAAH,GACAA,EAAAjK,eAAAoK,IACAH,EAAAG,MAAA,IACAD,GAAA,EAMAzP,GAAAO,KAAAiO,qBAAAiB,IAEA,MC9LAnQ,QAAAC,OAAA,OACAK,UAAA,mBAAA,aAAA,UAAA,QAAA,SAAAX,EAAA0Q,EAAA9P,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAA4P,QACAlB,aAAA,EACA5N,OAAA,WACAwN,KAAAI,aAAA,EACA1O,EAAAO,KAAAqO,QAEAC,KAAA,WACAP,KAAAI,aAAA,EACA1O,EAAAO,KAAAsO,QAGAgB,uBAAA,SAAAC,GAIA,MAFA9P,GAAA4P,OAAA9O,SAEA5B,QAAAyC,UACAvB,KAAA,WACA,GAAA0P,EAMA,OAAA,CALA,OACAC,KAAA,IACAxK,IAAA,iBAAAuK,KAMA1P,KAAA,WACA,MAAAP,GAAAM,KAAA,+BACA2P,YAAAA,IAEA1P,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,GACAA,EAAA2P,UANAnQ,SAQA,SAAAY,GAGA,KAFAA,GAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAA,MAGAL,KAAA,SAAA6P,GAEA,MADAjQ,GAAAO,KAAA0L,SAAA2D,OAAAK,EAAAL,QACA,IAEAxP,KAAA,WACA,MAAA,aAAA0P,EACA,GAAA5Q,SAAA,SAAAyC,EAAA6C,GACA0L,GAAAC,eAAA,SAAAC,GACA,cAAAA,EAAAC,OACAH,GAAAI,OAAA,SAAAF,GACAzO,GAAA,KAGAA,GAAA,QAKA,IA5CAzC,SA+CA,SAAAuB,GAEA,MADAkC,SAAAC,IAAAnC,IACA,IAEAL,KAAA,WACAJ,EAAA4P,OAAAf,UAMA,IAAA0B,IACAC,eACAC,WAGAzQ,GAAA0Q,kBAAA,WAIA,MAFA1Q,GAAA4P,OAAA9O,SAEA5B,QAAAyC,UACAvB,KAAA,WACA,MAAA,IAAAlB,SAAA,SAAAyC,EAAA6C,GACA0L,GAAAS,MAAA,SAAAH,GACA7O,EAAA6O,SAIApQ,KAAA,SAAAoQ,GACA,GAAA,cAAAA,EAAAH,OACA,MACAN,KAAA,IAMA,OAHAQ,GAAAC,YAAAA,EAAAI,aAEAL,EAAAC,YAAAK,eAAA,GAAA5K,OAAAC,WACA,IAGA9F,KAAA,WAEA,MAAA,IAAAlB,SAAA,SAAAyC,EAAA6C,GACA0L,GAAAY,IAAA,kBAAA,SAAAV,GAGA,IAAA,GAFAW,GAAAX,EAAA9P,KACA0Q,GAAA,EACA7J,EAAA,EAAAA,EAAA4J,EAAA9J,OAAAE,IACA,GAAA,kBAAA4J,EAAA5J,GAAA8J,WAAA,CACAD,EAAA,YAAAD,EAAA5J,GAAAkJ,QAAA,GAAA,CACA,OAIAW,EAKArP,GAAA,GAJA6C,GACAuL,KAAA,YAQA3P,KAAA,WACA,MAAA,IAAAlB,SAAA,SAAAyC,EAAA6C,GACA0L,GAAAY,IAAA,MAAA,SAAAV,GACAzO,EAAAyO,SAIAhQ,KAAA,SAAAqQ,GACA,GAAAA,EAAA/E,GAEA,MADA6E,GAAAE,QAAAA,GACA,CAEA,OACAlL,IAAA,aAAAkL,EACAV,KAAA,OAIA3P,KAAA,WACA,MAAAP,GAAAM,KAAA,0BAAAoQ,GACAnQ,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,GACAA,EAAA2P,UAJAnQ,SAMA,SAAAY,GAGA,KAFAA,GAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAA,MAGAL,KAAA,SAAA6P,GAEA,MADAjQ,GAAAO,KAAA0L,SAAA2D,OAAAK,EAAAL,QACA,IA5EA1Q,SA8EA,SAAAuB,GAEA,MADAkC,SAAAC,IAAAnC,IACA,IAEAL,KAAA,WACAJ,EAAA4P,OAAAf,eC3KAvP,QAAAC,OAAA,OACAK,UAAA,sBAAA,aAAA,UAAA,QAAA,SAAA,YAAA,SAAAX,EAAA0Q,EAAA9P,EAAAqR,EAAAC,GACA,OAEArR,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAAoR,cAAA,WACAlS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAyN,aAAAG,WAAA,IAEA/N,KAAA,WACAJ,EAAAO,KAAAsO,UAIA7O,EAAAqR,gBAAA,WACAnS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAA4N,UAAA,KAEA/N,KAAA,WACAJ,EAAAO,KAAAyN,aAAAG,WAAA,IAEA/N,KAAA,WACAJ,EAAAO,KAAAsO,eClCAvP,QAAAC,OAAA,OACAK,UAAA,kBAAA,aAAA,UAAA,QAAA,SAAAX,EAAA0Q,EAAA9P,GACA,OAEAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAAsR,UAAA,WACApS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAyN,aAAAjN,OAAA,IAEAX,KAAA,WACAJ,EAAAO,KAAAsO,UAIA7O,EAAAuR,YAAA,WACArS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAQ,MAAA,KAEAX,KAAA,WACAJ,EAAAO,KAAAyN,aAAAjN,OAAA,IAEAX,KAAA,WACAJ,EAAAO,KAAAsO,eClCAvP,QAAAC,OAAA,OACAK,UAAA,YAAA,aAAA,UAAA,QAAA,SAAA,YAAA,SAAAX,EAAA0Q,EAAA9P,EAAAqR,EAAAC,GACA,OAEArR,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAAwR,aAAA,WACAtS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAyN,aAAAC,UAAA,IAEA7N,KAAA,WACAJ,EAAAO,KAAAsO,UAIA7O,EAAAyR,eAAA,WACAvS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAS,UAAA,GACAhB,EAAAO,KAAAU,SAAA,KAEAb,KAAA,WACAJ,EAAAO,KAAAyN,aAAAC,UAAA,IAEA7N,KAAA,WACAJ,EAAAO,KAAAsO,eCnCAvP,QAAAC,OAAA,OACAK,UAAA,yBAAA,aAAA,UAAA,QAAA,SAAAX,EAAA0Q,EAAA9P,GACA,OAEAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAA0R,eAAA,WACAxS,QAAAyC,UACAvB,KAAA,WACA,MAAAJ,GAAAO,KAAA8O,6BCVA/P,QAAAC,OAAA,OACAK,UAAA,uBAAA,aAAA,UAAA,QAAA,SAAA,YAAA,SAAAX,EAAA0Q,EAAA9P,EAAAqR,EAAAC,GACA,OAEArR,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAA2R,eAAA,WACAzS,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAyN,aAAAE,YAAA,IAEA9N,KAAA,WACAJ,EAAAO,KAAAsO,UAIA7O,EAAA4R,iBAAA,WACA1S,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAA2N,WAAA,KAEA9N,KAAA,WACAJ,EAAAO,KAAAyN,aAAAE,YAAA,IAEA9N,KAAA,WACAJ,EAAAO,KAAAsO,eClCAvP,QAAAC,OAAA,OACAK,UAAA,qBAAA,aAAA,UAAA,QAAA,SAAAX,EAAA0Q,EAAA9P,GACA,OAEAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAEAnC,EAAA6R,aAAA,WACA3S,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAyN,aAAA9M,UAAA,IAEAd,KAAA,WACAJ,EAAAO,KAAAsO,UAIA7O,EAAA8R,eAAA,WACA5S,QAAAyC,UACAvB,KAAA,WAEA,MADAJ,GAAAO,KAAAqO,OACA1P,QAAA6P,MAAA,OAEA3O,KAAA,WACAJ,EAAAO,KAAAW,SAAA,KAEAd,KAAA,WACAJ,EAAAO,KAAAyN,aAAA9M,UAAA,IAEAd,KAAA,WACAJ,EAAAO,KAAAsO,eClCAvP,QAAAC,OAAA,OACAK,UAAA,0BAAA,aAAA,UAAA,QAAA,SAAA,YAAA,SAAAX,EAAA0Q,EAAA9P,EAAAqR,EAAAC,GACA,OAEArR,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAaA,QAAA4P,KACA/R,EAAAgS,UAAAC,QAAA,KACAjS,EAAAgS,UAAAC,UA6CA,QAAAC,GAAAC,EAAAC,GACAC,EAAAF,EAAAC,GACAE,SAAA,SAAAC,GACAvS,EAAAgS,UAAAC,QAAAtK,SAAA,GAAA4K,EAAAC,OAAAD,EAAAE,SAEA9H,QAAA,SAAArK,EAAA+P,EAAAqC,EAAAlT,GACAP,EAAAsB,KAAAC,sBAAAF,GACAN,EAAA2S,mBAEA1T,EAAAsB,KAAA8I,eAEAwB,MAAA,SAAA+H,GACA3T,EAAAsB,KAAAC,sBAAAoS,GACA5S,EAAA2S,qBAGA,QAAAN,GAAAF,EAAAC,GACA,MAAAlB,GAAA2B,QACAC,IAAAnD,EAAAvL,kBAAA,4BACA+N,OAAAA,EACAC,KAAAA,IA/EApS,EAAA+S,kBACAhK,KAAA,SAGA/I,EAAAgT,aAAA,EACAhT,EAAAgS,WACA9G,MAAA,EACA+G,QAAA,EACA5B,OAAA,eAUA,IAAA4C,EAEAjT,GAAAsP,OAAA,WACA,MAAAtP,GAAAgS,UAAAC,SACA,SAAA1C,EAAAC,GAEA,IAAAD,IACAvP,EAAAgS,UAAA3B,OAAA,gBACA4C,EAAA9B,EAAAY,EAAA,QAIA/R,EAAAkT,cAAA,WACAlT,EAAAgT,aAAA,EACAhT,EAAAgS,UAAAC,QAAA,EACAjS,EAAAgS,UAAA3B,OAAA,YACArQ,EAAAgS,UAAA9G,MAAA,GAGAlL,EAAA2S,iBAAA,WACA3S,EAAAgT,aAAA,EACAhT,EAAAgS,UAAA9G,MAAA,EACAlL,EAAAgS,UAAA3B,OAAA,YAGA4C,GACA9B,EAAAgC,OAAAF,IAIAjT,EAAA6S,OAAA,SAAAO,GACA,GAAAA,GAAAA,EAAAnM,OAAA,CACA,GAAAmL,GAAAgB,EAAA,GACAjB,IACAnS,GAAAkT,gBACA,UAAAlT,EAAA+S,iBAAAhK,MACAmJ,EAAAC,EAAAC","file":"app.min.js","sourcesContent":["function trackDigests(app) {\n    app.run([\"$rootScope\", function ($rootScope) {\n        Promise.setScheduler(function (cb) {\n            $rootScope.$evalAsync(cb);\n        });\n    }]);\n}\n\n//angular sanitize included in textAngular\nvar app = angular.module('app', [\n    'ngSanitize',\n    'ui.bootstrap',\n    'angularUtils.directives.dirDisqus',\n    'ngTagsInput',\n    'ngFileUpload',\n    'toastr',\n    'ngDialog',\n    'ui.select',\n    'ngTable',\n    'LocalStorageModule'\n])\n    .config(['$locationProvider', function ($locationProvider) {\n        $locationProvider.html5Mode({\n            enabled: true\n        });\n    }]);\n\ntrackDigests(app);","angular.module('app')\n    .directive('createAccountScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.createMain = {\n                    isBusy: false\n                };\n\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\"\n                };\n\n                $scope.createAccount = function (redirect) {\n                    $scope.createMain.isBusy = true;\n                    return createAccount($scope.registrationDetails, redirect)\n                        .then(function () {\n                            $scope.createMain.isBusy = false;\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details)\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            return true;\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $rootScope.main.responseStatusHandler(err);\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            return true;\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .directive('resetPasswordScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.resetMain = {\n                    isBusy: false\n                };\n\n                $scope.resetFormModel = {\n                    email: \"\",\n                    newPassword: \"\",\n                    confirmNewPassword: \"\"\n                };\n\n                //this is the first step\n                $scope.submitResetPasswordEmail = function () {\n                    $scope.resetMain.isBusy = true;\n                    return $http.post('/api/resetPassword/email', $scope.resetFormModel)\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            //don't remove isBusy here to prevent the user from submitting the details again\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $rootScope.main.responseStatusHandler(err);\n                            $scope.resetFormModel.email = \"\";\n                            $scope.resetFormModel.newPassword = \"\";\n                            $scope.resetFormModel.confirmNewPassword = \"\";\n                            $scope.resetMain.isBusy = false;\n                        });\n                };\n            }\n        };\n    }]);","angular.module('app')\n    .directive('signInScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.signInMain = {\n                    isBusy: false\n                };\n\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function (redirect) {\n                    $scope.signInMain.isBusy = true;\n                    return localUserLogin($scope.loginFormModel, redirect)\n                        .then(function () {\n                            $scope.signInMain.isBusy = false;\n                        });\n                };\n\n                function localUserLogin(loginData, redirect) {\n                    return Promise.resolve()\n                        .then(function () {\n                            if (redirect) {\n                                return $http.post('/localUserLogin?lastpage=' + document.referrer, loginData);\n                            } else {\n                                return $http.post('/localUserLogin', loginData);\n                            }\n                        })\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            return true;\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(err);\n                            return true;\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .directive('imageAdDirective', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                var adsize = $attrs.adsize.toString();\n                var display = s.words($attrs.display);  //s is underscore string library\n\n                var width = $(window).width();\n\n                if (width >= 1200 && display.indexOf('lg') > -1) {\n                    putImageAd();\n                } else if (width >= 992 && width < 1200 && display.indexOf('md') > -1) {\n                    putImageAd();\n                } else if (width >= 768 && width < 992 && display.indexOf('sm') > -1) {\n                    putImageAd();\n                } else if (width < 768 && display.indexOf('xs') > -1) {\n                    putImageAd();\n                } else {\n                    //don't display\n                }\n\n                function putImageAd() {\n                    Promise.resolve()\n                        .then(function () {\n                            return $http.post('/ad/imageAdHtml', {\n                                size: adsize\n                            })\n                                .catch(function (e) {\n                                    e = e.data;\n                                    $rootScope.main.responseStatusHandler(e);\n                                    throw e;\n                                })\n                                .then(function (resp) {\n                                    resp = resp.data;\n                                    $rootScope.main.responseStatusHandler(resp);\n                                    return resp;\n                                });\n                        })\n                        .then(function (html) {\n                            $element.empty();\n                            $element.append(html);\n                        })\n                        .catch(function (e) {\n                            console.log(e);\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .config(function (localStorageServiceProvider) {\n        localStorageServiceProvider\n            .setPrefix('app')\n            .setStorageCookieDomain(document.location.hostname.search(\"africanexponent\") !== -1 ? 'africanexponent.com' : '')\n            .setStorageType('localStorage');\n    });\n\nangular.module('app')\n    .controller('UniversalController', ['$filter', '$window', '$location', '$scope', '$rootScope', 'ngDialog', '$anchorScroll', '$sce', 'localStorageService', '$http',\n        function ($filter, $window, $location, $scope, $rootScope, ngDialog, $anchorScroll, $sce, localStorageService, $http) {\n\n            $rootScope.main = {\n\n                userLocationData: null,\n\n                getUserLocationData: function () {\n\n                    //localStorageKey is 'userLocation'\n\n                    var html5GeoOptions = {\n                        enableHighAccuracy: false,\n                        timeout: 30000,\n                        maximumAge: 86400 * 1000 //default to one day\n                    };\n\n                    Promise.resolve()\n                        .then(function () {\n                            return new Promise(function (resolve, reject) {\n\n                                if ($rootScope.main.checkCookieIsEnabled()) {\n\n                                    var loc;\n\n                                    if (loc = $rootScope.main.getKeyFromCookie('userLocation', 86400 * 7)) {  //checks that the cookie is no more than 7 days old\n                                        if (loc.hasOwnProperty('country') && loc.country) {\n                                            resolve(true);\n                                        } else {\n                                            getNewLocationData();\n                                        }\n                                    } else {\n                                        getNewLocationData();\n                                    }\n\n                                } else {\n                                    console.log('Cookie not supported');\n                                    var temp = {\n                                        country: null\n                                    };\n                                    $rootScope.main.saveKeyToCookie('userLocation', temp, 7); //save for next viewed page\n                                    resolve(true);\n                                }\n\n                                function getNewLocationData() {\n                                    geolocator.locateByIP(found, geoError, 2); //true will cause it to fallback to ip address\n\n                                    function found(locationData) {\n\n                                        var temp = {\n                                            country: locationData.address.country\n                                        };\n                                        $rootScope.main.saveKeyToCookie('userLocation', temp, 1); //save for next viewed page\n                                        resolve(true);\n                                    }\n\n                                    function geoError(e) {\n                                        var temp = {\n                                            country: null\n                                        };\n                                        $rootScope.main.saveKeyToCookie('userLocation', temp, 1); //save for next viewed page\n                                        reject(e);\n                                    }\n                                }\n                            });\n                        })\n                        .catch(function (e) {\n                            if (e.msg) {\n                                console.log(e.msg);\n                            }\n                            else {\n                                throw e;\n                            }\n                        })\n                        .catch(function (e) {\n                            console.log(e);\n                        });\n                },\n\n                checkLocalStorageSupport: function () {\n                    if (localStorageService.isSupported) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n\n                checkCookieIsEnabled: function () {\n                    if (localStorageService.cookie.isSupported) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n\n                saveToLocalStorage: function (key, val) {\n                    var object = {\n                        value: val,\n                        timestamp: new Date().getTime()\n                    };\n                    return localStorageService.set(key, object); //returns a boolean\n                },\n\n                getFromLocalStorage: function (key, maxAgeSeconds) {\n                    if (!maxAgeSeconds) {\n                        maxAgeSeconds = 86400; //default to one day\n                    }\n                    if ($rootScope.main.checkIfExistsOnLocalStorage(key)) {\n                        var object = localStorageService.get(key);\n                        var dateString = object.timestamp;\n                        var now = new Date().getTime().toString();\n                        if (now - dateString > (maxAgeSeconds * 1000)) {\n                            $rootScope.main.removeFromLocalStorage([key]); //remove expired item from local storage\n                            return false;\n                        } else {\n                            return object.value;\n                        }\n                    } else {\n                        return false;\n                    }\n                },\n\n                saveKeyToCookie: function (key, val, maxAgeInDays) {\n                    if (!maxAgeInDays) {\n                        maxAgeInDays = 2; //defaults to 2 day(s)\n                    }\n                    var object = {\n                        value: val,\n                        timestamp: new Date().getTime()\n                    };\n                    object = JSON.stringify(object);\n                    return localStorageService.cookie.set(key, object, maxAgeInDays); //returns a boolean\n                },\n\n                getKeyFromCookie: function (key, maxAgeSeconds) {\n                    if (!maxAgeSeconds) {\n                        maxAgeSeconds = 86400; //default to one day\n                    }\n                    var object = localStorageService.cookie.get(key);\n                    if (object) {\n                        var dateString = object.timestamp;\n                        var now = new Date().getTime().toString();\n                        if ((now - dateString) > (maxAgeSeconds * 1000)) {\n                            $rootScope.main.removeKeyFromCookie(key); //remove expired item from local storage\n                            return false;\n                        } else {\n                            return object.value;\n                        }\n                    } else {\n                        return false;\n                    }\n                },\n\n                checkIfExistsOnLocalStorage: function (key) {\n                    var keys = localStorageService.keys();\n                    var len = keys.length;\n                    var exists = false;\n                    for (var i = 0; i < len; i++) {\n                        if (keys[i] == key) {\n                            exists = true;\n                            break;\n                        }\n                    }\n                    return exists;\n                },\n\n                removeFromLocalStorage: function (keyArray, all) {  //if all is true, it clears all keys\n                    if (all) {\n                        return localStorageService.clearAll();\n                    } else {\n                        keyArray.forEach(function (key) {\n                            localStorageService.remove(key);\n                        });\n                    }\n\n                    return true;\n                },\n\n                removeKeyFromCookie: function (key) {  //if all is true, it clears all keys\n                    return localStorageService.cookie.remove(key);\n                },\n\n                windowWidth: $(window).width(),\n\n                bootStrapWidth: function (width) {\n                    width = parseInt(width);\n\n                    if (width >= 1200) {\n                        return 'lg';\n                    } else if (width >= 992 && width < 1200) {\n                        return 'md';\n                    } else if (width >= 768 && width < 992) {\n                        return 'sm';\n                    } else if (width < 768) {\n                        return 'xs';\n                    }\n                },\n\n\n                trustAsHtml: function (value) {\n                    return $sce.trustAsHtml(value);\n                },\n\n                intersectionArray: function (arr1, arr2) {\n                    return _.intersection(arr1, arr2);\n                },\n\n                getAmazonS3Url: function (keyWithoutSlash) {\n                    var domain = 'https://assets.africanexponent.com/';\n                    return domain + keyWithoutSlash;\n                },\n\n                defaultProfilePicture: '/public/imgsmin/default_avatar/default_avatar_red_462_462.png',\n\n                isAdmin: function (user) {\n                    var arr = [77, 100, 101];\n                    return user.adminLevels.length === 0 ? false : _.intersection(user.adminLevels, arr).length > 0;\n                },\n\n                assetsDomainWithSlash: function () {\n                    return 'https://assets.africanexponent.com/';\n                },\n\n                goToTop: function () {\n                    $location.hash('pageTop');\n                    $anchorScroll();\n                },\n\n                back: function () {\n                    $rootScope.back();\n                },\n\n                responseStatusHandler: function (resp) {\n                    $filter('responseFilter')(resp);\n                },\n\n                showToast: function (type, msg) {\n                    $rootScope.showToast(type, msg);\n                },\n\n                clearBanners: function () {\n                    $rootScope.$broadcast('clearBanners');\n                },\n\n                redirectToAbout: function () {\n                    $window.location.href = '/about';\n                },\n\n                redirectToLogin: function () {\n                    $window.location.href = '/notLoggedIn';\n                },\n\n                reloadPage: function () {\n                    $window.location.reload();\n                },\n\n                redirectToHome: function () {\n                    $window.location.href = '/';\n                },\n\n                redirectToPage: function (pathWithFirstSlash) {\n                    $window.location.href = getLocationHost() + pathWithFirstSlash;\n                },\n\n                redirectToPreviousPage: function () {\n                    window.location.href = document.referrer;\n                },\n\n                showExecuting: function (message) {\n                    var msg;\n                    if (!message || typeof message !== 'string' || message.length === 0) {\n                        msg = 'Performing action...';\n                    } else {\n                        msg = message + '...';\n                    }\n\n                    return ngDialog.open({\n                        data: {\n                            message: msg\n                        },\n                        templateUrl: 'views/dialogs/executing.html',\n                        className: 'ngdialog-theme-default',\n                        overlay: true,\n                        showClose: false,\n                        closeByEscape: false,\n                        closeByDocument: false,\n                        cache: true,\n                        trapFocus: false,\n                        preserveFocus: true\n                    });\n                }\n\n            };\n\n            $rootScope.main.getUserLocationData();\n\n            $rootScope.back = function () {\n                window.history.back();\n            };\n\n            function getLocationHost() {\n                if (document.location.hostname.search(\"africanexponent\") !== -1) {\n                    return \"//www.africanexponent.com\";\n                } else if (document.location.hostname.search(\"amazonaws\") !== -1) {\n                    return \"//ec2-54-85-41-117.compute-1.amazonaws.com:3000\";\n                } else {\n                    if ($location.port()) {\n                        return 'http://localhost' + \":\" + $location.port();\n                    } else {\n                        return 'http://localhost';\n                    }\n                }\n            }\n        }\n    ]);","angular.module('app')\n    .directive('resendEmailScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    var dialog = $rootScope.main.showExecuting('Sending Email');\n                    resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            dialog.close();\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            dialog.close();\n                            $rootScope.main.responseStatusHandler(err);\n                        });\n                };\n\n                function resendConfirmationEmail(userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .filter(\"responseFilter\", ['$q', '$log', '$window', '$rootScope', 'ngDialog', function ($q, $log, $window, $rootScope, ngDialog) {\n        return function (resp) {\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                };\n            }\n\n            if (resp !== null && typeof resp === 'object') {\n                if (resp.redirect) {\n                    if (resp.redirectPage) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.reload) {\n                    $rootScope.main.reloadPage();\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                        //showNotificationBar(resp.type, resp.msg);\n                    }\n                }\n                if (resp.dialog) {\n                    if (resp.id) {\n                        switch (resp.id) {\n                            case \"not-authorized\":\n                                not_authorized_dialog();\n                                break;\n                            case \"sign-in\":\n                                sign_in_dialog(resp.msg);\n                                break;\n                            default:\n                            //do nothing\n                        }\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n\n            function not_authorized_dialog() {\n                ngDialog.open({\n                    template: '/dialog/not-authorized.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: true,\n                    closeByDocument: true,\n                    cache: false,\n                    trapFocus: true,\n                    preserveFocus: true\n                });\n            }\n\n            function sign_in_dialog(message) {\n                ngDialog.openConfirm({\n                    data: {\n                        message: message\n                    },\n                    template: '/dialog/sign-in.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: false,\n                    closeByDocument: false,\n                    cache: true,\n                    trapFocus: true,\n                    preserveFocus: true\n                }).then(function () {\n                    $rootScope.main.redirectToPage('/notLoggedIn');\n                }, function () {\n                    $rootScope.main.redirectToPage('/about');\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .factory('globals', ['$location', '$http',\n        function ($location, $http) {\n            var userData = {};\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                userDataFromServer: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                getLocationHost: function () {\n                    if (document.location.hostname.search(\"africanexponent\") !== -1) {\n                        return \"//www.africanexponent.com\";\n                    } else if (document.location.hostname.search(\"amazonaws\") !== -1) {\n                        return \"//ec2-54-85-41-117.compute-1.amazonaws.com:3000\";\n                    } else {\n                        if ($location.port()) {\n                            return 'http://localhost' + \":\" + $location.port();\n                        } else {\n                            return 'http://localhost';\n                        }\n                    }\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .directive('toastrDirective', ['$rootScope', 'toastr', function ($rootScope, toastr) {\n        return {\n            restrict: 'AE',\n            link: function () {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        };\n    }])\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .directive('universalBannerScope', ['$rootScope', 'globals', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.universalBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('universalBanner', function (event, banner) {\n                    $scope.universalBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.universalBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .directive('postTopicScope', ['$rootScope', '$http', function ($rootScope, $http) {\n\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.theModel = JSON.parse($scope.model);\n\n                function getPostTopic(pageNumber) {\n                    $scope.mainTopicModel = {\n                        topic: $scope.theModel.topic,\n                        requestedPage: pageNumber\n                    };\n\n\n                    if ($scope.mainTopicModel.topic && $scope.mainTopicModel.requestedPage) {\n                        $scope.buttonLoading();\n                        topicSearch($scope.mainTopicModel)\n                            .success(function (resp) {\n                                $rootScope.main.responseStatusHandler(resp);\n                                $scope.theModel.pageNumber++;\n                                angular.element('#appendNextPosts').replaceWith(resp);\n                                $scope.finishedLoading();\n                            })\n                            .error(function (errResp) {\n                                $rootScope.main.responseStatusHandler(errResp);\n                                $scope.finishedLoading();\n                            });\n                    }\n                }\n\n                function topicSearch(topicObject) {\n                    var topic = topicObject.topic;\n                    var pageNumber = topicObject.requestedPage;\n                    return $http.get('/partial/topic/' + topic + '?page=' + parseInt(pageNumber));\n                }\n\n\n                $scope.showMore = function () {\n                    getPostTopic(parseInt($scope.theModel.pageNumber) + 1);\n                };\n\n                //button loading state\n                $scope.buttonLoading = function () {\n                    $('#showMoreBtn').button('loading');\n                };\n                $scope.finishedLoading = function () {\n                    $('#showMoreBtn').button('reset');\n                };\n            }\n        };\n    }]);","angular.module('app')\n    .controller('EditDetailsController', ['$filter', '$window', '$location', '$scope', '$rootScope', '$http', 'ngDialog',\n        function ($filter, $window, $location, $scope, $rootScope, $http, ngDialog) {\n\n            $scope.main = {\n                mainCollapse: {\n                    fullName: true,\n                    email: true,\n                    username: true,\n                    statusLine: true,\n                    biography: true\n                },\n\n                collapseAll: function () {\n                    for (var t in this.mainCollapse) {\n                        if (this.mainCollapse.hasOwnProperty(t)) {\n                            this.mainCollapse[t] = true;\n                        }\n                    }\n                },\n\n                userData: {},\n                userEditModel: {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    username: '',\n                    statusLine: '',\n                    biography: ''\n                },\n\n                contentHasBeenEdited: false,\n\n                isLoading: true, //initial loading state where everything loads\n                showSpinner: false,\n                showDone: false,\n                isBusy: false,\n                busy: function () {\n                    this.showSpinner = true;\n                    this.showDone = false;\n                    this.isBusy = true;\n                },\n                done: function () {\n                    var self = this;\n                    self.showSpinner = false;\n                    self.isBusy = false;\n                    self.showDone = true;\n                    Promise.delay(2000)\n                        .then(function () {\n                            self.showDone = false;\n                        })\n                },\n\n                update: function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            var temp = {};\n                            if ($scope.main.userEditModel.firstName.length > 0) {\n                                temp.firstName = $scope.main.userEditModel.firstName;\n                            }\n\n                            if ($scope.main.userEditModel.lastName.length > 0) {\n                                temp.lastName = $scope.main.userEditModel.lastName;\n                            }\n\n                            if ($scope.main.userEditModel.email.length > 0) {\n                                temp.email = $scope.main.userEditModel.email;\n                            }\n\n                            if ($scope.main.userEditModel.username.length > 0) {\n                                temp.username = $scope.main.userEditModel.username;\n                            }\n\n                            if ($scope.main.userEditModel.statusLine.length > 0) {\n                                temp.statusLine = $scope.main.userEditModel.statusLine;\n                            }\n\n                            if ($scope.main.userEditModel.biography.length > 0) {\n                                temp.biography = $scope.main.userEditModel.biography;\n                            }\n\n                            return $http.post('/api/updateUserDetails', {\n                                data: temp\n                            });\n                        })\n                        .then(function (obj) {\n                            obj = obj.data;\n                            $rootScope.main.responseStatusHandler(obj);\n                            return $scope.main.getUserData();\n                        })\n                        .then(function () {\n                            $scope.main.collapseAll();\n                            $scope.main.done();\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $rootScope.main.responseStatusHandler(err);\n                            $scope.main.done();\n                        });\n                },\n\n                passwordEditModel: {\n                    oldPassword: '',\n                    newPassword: '',\n                    confirmNewPassword: ''\n                },\n\n                updateUserPassword: function () {\n                    if (this.passwordEditModel.oldPassword && this.passwordEditModel.newPassword && this.passwordEditModel.confirmNewPassword) {\n                        return Promise.resolve()\n                            .then(function () {\n                                $scope.main.busy();\n                                return Promise.delay(1000);\n                            })\n                            .then(function () {\n                                var temp = {\n                                    oldPassword: $scope.main.passwordEditModel.oldPassword,\n                                    newPassword: $scope.main.passwordEditModel.newPassword,\n                                    confirmNewPassword: $scope.main.passwordEditModel.confirmNewPassword\n                                };\n                                return $http.post('/api/updateUserPassword', {\n                                    data: temp\n                                });\n                            })\n                            .then(function (obj) {\n                                obj = obj.data;\n                                $rootScope.main.responseStatusHandler(obj);\n                            })\n                            .then(function () {\n                                $scope.main.passwordEditModel.oldPassword = '';\n                                $scope.main.passwordEditModel.newPassword = '';\n                                $scope.main.passwordEditModel.confirmNewPassword = '';\n                                $scope.main.done();\n                            })\n                            .catch(function (err) {\n                                err = err.data;\n                                $rootScope.main.responseStatusHandler(err);\n                                $scope.main.done();\n                            });\n                    }\n                },\n\n                getUserData: function () {\n                    return Promise.resolve()\n                        .then(function () {\n                            return $http.get('/api/getUserData');\n                        })\n                        .then(function (obj) {\n                            obj = obj.data;\n                            if (!obj.userData) {\n                                $rootScope.main.redirectToLogin();\n                            } else {\n                                $scope.main.userData = obj.userData;\n                                return Promise.delay(1000)\n                                    .then(function () {\n                                        $scope.main.isLoading = false;\n                                    });\n                            }\n                        })\n                }\n            };\n\n            $scope.main.getUserData()\n                .catch(function (err) {\n                    err = err.data;\n                    $rootScope.main.responseStatusHandler(err);\n                    $scope.main.done();\n                });\n\n            //watch if user has edited any thing and mark it as edited\n            $scope.$watch(function () {\n                return $scope.main.mainCollapse;\n            }, function (newVal, oldVal) {\n                var isEdited = false;\n                if (newVal) {\n                    for (var p in newVal) {\n                        if (newVal.hasOwnProperty(p)) {\n                            if (newVal[p] === false) {\n                                isEdited = true;\n                            }\n                        }\n                    }\n                }\n\n                $scope.main.contentHasBeenEdited = isEdited;\n\n            }, true);\n        }\n    ]);","angular.module('app')\n    .directive('socialDirective', ['$rootScope', 'globals', '$http', function ($rootScope, globals, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.social = {\n                    showSpinner: false,\n                    isBusy: function () {\n                        this.showSpinner = true;\n                        $scope.main.busy();\n                    },\n                    done: function () {\n                        this.showSpinner = false;\n                        $scope.main.done();\n                    },\n\n                    deleteConnectedService: function (serviceName) {\n\n                        $scope.social.isBusy();\n\n                        return Promise.resolve()\n                            .then(function () {\n                                if (!serviceName) {\n                                    throw {\n                                        code: 500,\n                                        msg: 'serviceName = ' + serviceName\n                                    };\n                                } else {\n                                    return true;\n                                }\n                            })\n                            .then(function () {\n                                return $http.post('/api/deleteConnectedService', {\n                                    serviceName: serviceName\n                                })\n                                    .then(function (resp) {\n                                        resp = resp.data;\n                                        $rootScope.main.responseStatusHandler(resp);\n                                        return resp.theUser;\n                                    })\n                                    .catch(function (err) {\n                                        err = err.data;\n                                        $rootScope.main.responseStatusHandler(err);\n                                        throw err;\n                                    })\n                            })\n                            .then(function (updatedUser) {\n                                $scope.main.userData.social = updatedUser.social;\n                                return true;\n                            })\n                            .then(function () {\n                                if (serviceName === 'facebook') {\n                                    return new Promise(function (resolve, reject) {\n                                        FB.getLoginStatus(function (response) {\n                                            if (response.status === 'connected') {\n                                                FB.logout(function (response) {\n                                                    resolve(true);\n                                                });\n                                            } else {\n                                                resolve(true);\n                                            }\n                                        });\n                                    })\n                                } else {\n                                    return true;\n                                }\n                            })\n                            .catch(function (err) {\n                                console.log(err);\n                                return true;\n                            })\n                            .then(function () {\n                                $scope.social.done();\n                            })\n\n                    }\n                };\n\n                var fbOptions = {\n                    credentials: {},\n                    profile: {}\n                };\n\n                $scope.connectToFacebook = function () {\n\n                    $scope.social.isBusy();\n\n                    return Promise.resolve()\n                        .then(function () {\n                            return new Promise(function (resolve, reject) {\n                                FB.login(function (credentials) {\n                                    resolve(credentials)\n                                });\n                            })\n                        })\n                        .then(function (credentials) {\n                            if (credentials.status !== 'connected') {\n                                throw {\n                                    code: 401\n                                };\n                            } else {\n                                fbOptions.credentials = credentials.authResponse;\n                                //add the date\n                                fbOptions.credentials.dateConnected = new Date().getTime();\n                                return true;\n                            }\n                        })\n                        .then(function () {\n                            //check that the permissions to the public profile are granted\n                            return new Promise(function (resolve, reject) {\n                                FB.api('/me/permissions', function (response) {\n                                    var permissionsArray = response.data;\n                                    var public_profile = false;\n                                    for (var i = 0; i < permissionsArray.length; i++) {\n                                        if (permissionsArray[i].permission == \"public_profile\") {\n                                            permissionsArray[i].status === 'granted' ? public_profile = true : public_profile = false;\n                                            break;\n                                        }\n                                    }\n\n                                    if (!public_profile) {\n                                        reject({\n                                            code: 401\n                                        });\n                                    } else {\n                                        resolve(true);\n                                    }\n                                });\n                            })\n                        })\n                        .then(function () {\n                            return new Promise(function (resolve, reject) {\n                                FB.api('/me', function (response) {\n                                    resolve(response);\n                                });\n                            })\n                        })\n                        .then(function (profile) {\n                            if (profile.id) { //check that we actually have the profile\n                                fbOptions.profile = profile;\n                                return true;\n                            } else {\n                                throw {\n                                    msg: 'profile = ' + profile,\n                                    code: 500\n                                };\n                            }\n                        })\n                        .then(function () {\n                            return $http.post('/api/updateUserFacebook', fbOptions)\n                                .then(function (resp) {\n                                    resp = resp.data;\n                                    $rootScope.main.responseStatusHandler(resp);\n                                    return resp.theUser;\n                                })\n                                .catch(function (err) {\n                                    err = err.data;\n                                    $rootScope.main.responseStatusHandler(err);\n                                    throw err;\n                                })\n                        })\n                        .then(function (updatedUser) {\n                            $scope.main.userData.social = updatedUser.social;\n                            return true;\n                        })\n                        .catch(function (err) {\n                            console.log(err);\n                            return true;\n                        })\n                        .then(function () {\n                            $scope.social.done();\n                        })\n                }\n            }\n        }\n    }]);","angular.module('app')\n    .directive('biographyDirective', ['$rootScope', 'globals', '$http', 'Upload', '$interval', function ($rootScope, globals, $http, Upload, $interval) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.editBiography = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(3000);\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.biography = false;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                };\n\n                $scope.cancelBiography = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            $scope.main.biography = '';\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.biography = true;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                }\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('emailDirective', ['$rootScope', 'globals', '$http', function ($rootScope, globals, $http) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.editEmail = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(3000);\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.email = false;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                };\n\n                $scope.cancelEmail = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            $scope.main.email = '';\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.email = true;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                }\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('fullName', ['$rootScope', 'globals', '$http', 'Upload', '$interval', function ($rootScope, globals, $http, Upload, $interval) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.editFullName = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(3000);\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.fullName = false;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                };\n\n                $scope.cancelFullName = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            $scope.main.firstName = '';\n                            $scope.main.lastName = '';\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.fullName = true;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                }\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('editPasswordDirective', ['$rootScope', 'globals', '$http', function ($rootScope, globals, $http) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.updatePassword = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            return $scope.main.updateUserPassword();\n                        });\n                };\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('statusLineDirective', ['$rootScope', 'globals', '$http', 'Upload', '$interval', function ($rootScope, globals, $http, Upload, $interval) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.editStatusLine = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(3000);\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.statusLine = false;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                };\n\n                $scope.cancelStatusLine = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            $scope.main.statusLine = '';\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.statusLine = true;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                }\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('usernameDirective', ['$rootScope', 'globals', '$http', function ($rootScope, globals, $http) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n\n                $scope.editUsername = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(3000);\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.username = false;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                };\n\n                $scope.cancelUsername = function () {\n                    Promise.resolve()\n                        .then(function () {\n                            $scope.main.busy();\n                            return Promise.delay(1000);\n                        })\n                        .then(function () {\n                            $scope.main.username = '';\n                        })\n                        .then(function () {\n                            $scope.main.mainCollapse.username = true;\n                        })\n                        .then(function () {\n                            $scope.main.done();\n                        });\n                }\n\n            }\n        }\n    }]);","angular.module('app')\n    .directive('profilePictureUploader', ['$rootScope', 'globals', '$http', 'Upload', '$interval', function ($rootScope, globals, $http, Upload, $interval) {\n        return {\n\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                $scope.selectedFileType = {\n                    type: 'image'\n                };\n\n                $scope.isUploading = false;\n                $scope.uploading = {\n                    show: false,\n                    percent: 0,\n                    status: 'Uploading...'\n                };\n\n\n                function incrementUploadingPercent() {\n                    if ($scope.uploading.percent < 100) {\n                        $scope.uploading.percent++;\n                    }\n                }\n\n                var progressIntervalPromise;\n\n                $scope.$watch(function () {\n                    return $scope.uploading.percent;\n                }, function (newVal, oldVal) {\n                    /*user upload progress goes until 80%*/\n                    if (newVal == 80) {\n                        $scope.uploading.status = 'Processing...';\n                        progressIntervalPromise = $interval(incrementUploadingPercent, 1000);\n                    }\n                });\n\n                $scope.showUploading = function () {\n                    $scope.isUploading = true;\n                    $scope.uploading.percent = 0;\n                    $scope.uploading.status = 'Uploading';\n                    $scope.uploading.show = true;\n                };\n\n                $scope.hideProgressBars = function () {\n                    $scope.isUploading = false;\n                    $scope.uploading.show = false;\n                    $scope.uploading.status = 'Uploading';\n\n                    /*stop the timeout*/\n                    if (progressIntervalPromise) {\n                        $interval.cancel(progressIntervalPromise)\n                    }\n                };\n\n                $scope.upload = function (files) {\n                    if (files && files.length) {\n                        var file = files[0];\n                        var fields = {};\n                        $scope.showUploading();\n                        if ($scope.selectedFileType.type === 'image') {\n                            uploadProfilePicture(fields, file);\n                        }\n                    }\n                };\n\n                function uploadProfilePicture(fields, file) {\n                    uploadImageToServer(fields, file)\n                        .progress(function (evt) {\n                            $scope.uploading.percent = parseInt(80.0 * evt.loaded / evt.total);\n                        })\n                        .success(function (data, status, headers, config) {\n                            $rootScope.main.responseStatusHandler(data);\n                            $scope.hideProgressBars();\n                            //refresh page to reflect updates\n                            $rootScope.main.reloadPage();\n                        })\n                        .error(function (errResponse) {\n                            $rootScope.main.responseStatusHandler(errResponse);\n                            $scope.hideProgressBars();\n                        });\n                }\n                function uploadImageToServer(fields, file) {\n                    return Upload.upload({\n                        url: globals.getLocationHost() + '/api/uploadProfilePicture',\n                        fields: fields,\n                        file: file\n                    });\n                }\n            }\n        }\n    }]);"],"sourceRoot":"/source/"}