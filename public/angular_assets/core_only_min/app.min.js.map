{"version":3,"sources":["app.js","account/createAccount.js","account/resetPassword.js","account/signIn.js","ads/ads.js","controllers/universalCtrl.js","email/resend_email.js","req/response_filter.js","services/globals.js","adirectives/banners/bannerDir.js","adirectives/banners/universalBanner.js","adirectives/post-topic/post_topic.js"],"names":["trackDigests","app","run","$rootScope","Promise","setScheduler","cb","$evalAsync","angular","module","config","$locationProvider","html5Mode","enabled","directive","$http","restrict","link","$scope","createAccount","details","post","then","resp","data","main","responseStatusHandler","err","registrationDetails","password1","password2","createMain","isBusy","email","firstName","lastName","username","redirect","resetMain","resetFormModel","newPassword","confirmNewPassword","submitResetPasswordEmail","localUserLogin","loginData","resolve","document","referrer","loginFormModel","password","signInMain","submitLocalLoginForm","$element","$attrs","putImageAd","size","adsize","e","html","empty","append","console","log","toString","display","s","words","width","$","window","indexOf","localStorageServiceProvider","setPrefix","setStorageCookieDomain","location","hostname","search","setStorageType","controller","$filter","$window","$location","ngDialog","$anchorScroll","$sce","localStorageService","getLocationHost","port","userLocationData","getUserLocationData","reject","getNewLocationData","found","locationData","temp","country","address","saveKeyToCookie","geoError","geolocator","locateByIP","checkCookieIsEnabled","loc","getKeyFromCookie","hasOwnProperty","msg","checkLocalStorageSupport","isSupported","cookie","saveToLocalStorage","key","val","object","value","timestamp","Date","getTime","set","getFromLocalStorage","maxAgeSeconds","checkIfExistsOnLocalStorage","get","dateString","now","removeFromLocalStorage","maxAgeInDays","JSON","stringify","removeKeyFromCookie","keys","len","length","exists","i","keyArray","all","clearAll","forEach","remove","windowWidth","bootStrapWidth","parseInt","trustAsHtml","intersectionArray","arr1","arr2","_","intersection","getAmazonS3Url","keyWithoutSlash","domain","defaultProfilePicture","isAdmin","user","arr","adminLevels","assetsDomainWithSlash","goToTop","hash","back","showToast","type","clearBanners","$broadcast","redirectToAbout","href","redirectToLogin","reloadPage","reload","redirectToHome","redirectToPage","pathWithFirstSlash","redirectToPreviousPage","showExecuting","message","open","templateUrl","className","overlay","showClose","closeByEscape","closeByDocument","cache","trapFocus","preserveFocus","history","resendConfirmationEmail","userUniqueCuid","dialog","success","close","error","filter","$q","$log","makeBanner","show","bannerClass","not_authorized_dialog","template","sign_in_dialog","openConfirm","redirectPage","notify","id","banner","signInBanner","registrationBanner","reason","warn","factory","userData","userDataFromServer","toastr","toastType","text","clear","warning","closeButton","tapToDismiss","timeOut","clearToasts","$on","event","universalBanner","getPostTopic","pageNumber","mainTopicModel","topic","theModel","requestedPage","buttonLoading","topicSearch","element","replaceWith","finishedLoading","errResp","topicObject","parse","model","showMore","button"],"mappings":"AAAA,QAAAA,cAAAC,GACAA,EAAAC,KAAA,aAAA,SAAAC,GACAC,QAAAC,aAAA,SAAAC,GACAH,EAAAI,WAAAD,QAMA,GAAAL,KAAAO,QAAAC,OAAA,OACA,aACA,eACA,oCACA,SACA,WACA,UACA,uBAEAC,QAAA,oBAAA,SAAAC,GACAA,EAAAC,WACAC,SAAA,MAIAb,cAAAC,KCxBAO,QAAAC,OAAA,OACAK,UAAA,sBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAsBA,QAAAC,GAAAC,GACA,MAAAL,GAAAM,KAAA,iBAAAD,GACAE,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,IACA,IAJAR,SAMA,SAAAY,GAKA,MAJAA,GAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAU,oBAAAC,UAAA,GACAX,EAAAU,oBAAAE,UAAA,IACA,IAjCAZ,EAAAa,YACAC,QAAA,GAGAd,EAAAU,qBACAK,MAAA,GACAC,UAAA,GACAC,SAAA,GACAC,SAAA,GACAP,UAAA,GACAC,UAAA,IAGAZ,EAAAC,cAAA,SAAAkB,GAEA,MADAnB,GAAAa,WAAAC,QAAA,EACAb,EAAAD,EAAAU,oBAAAS,GACAf,KAAA,WACAJ,EAAAa,WAAAC,QAAA,UCtBAxB,QAAAC,OAAA,OACAK,UAAA,sBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAEAA,EAAAoB,WACAN,QAAA,GAGAd,EAAAqB,gBACAN,MAAA,GACAO,YAAA,GACAC,mBAAA,IAIAvB,EAAAwB,yBAAA,WAEA,MADAxB,GAAAoB,UAAAN,QAAA,EACAjB,EAAAM,KAAA,2BAAAH,EAAAqB,gBACAjB,KAAA,SAAAC,GACAA,EAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,KAHAR,SAMA,SAAAY,GACAA,EAAAA,EAAAH,KACArB,EAAAsB,KAAAC,sBAAAC,GACAT,EAAAqB,eAAAN,MAAA,GACAf,EAAAqB,eAAAC,YAAA,GACAtB,EAAAqB,eAAAE,mBAAA,GACAvB,EAAAoB,UAAAN,QAAA,UC/BAxB,QAAAC,OAAA,OACAK,UAAA,eAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAmBA,QAAAyB,GAAAC,EAAAP,GACA,MAAAjC,SAAAyC,UACAvB,KAAA,WACA,MAAAe,GACAtB,EAAAM,KAAA,4BAAAyB,SAAAC,SAAAH,GAEA7B,EAAAM,KAAA,kBAAAuB,KAGAtB,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,IACA,IAXAnB,SAaA,SAAAuB,GAIA,MAHAA,GAAAA,EAAAH,KACAN,EAAA8B,eAAAC,SAAA,GACA9C,EAAAsB,KAAAC,sBAAAC,IACA,IAnCAT,EAAAgC,YACAlB,QAAA,GAGAd,EAAA8B,gBACAZ,SAAA,GACAa,SAAA,IAGA/B,EAAAiC,qBAAA,SAAAd,GAEA,MADAnB,GAAAgC,WAAAlB,QAAA,EACAW,EAAAzB,EAAA8B,eAAAX,GACAf,KAAA,WACAJ,EAAAgC,WAAAlB,QAAA,UCnBAxB,QAAAC,OAAA,OACAK,UAAA,oBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,EAAAkC,EAAAC,GAkBA,QAAAC,KACAlD,QAAAyC,UACAvB,KAAA,WACA,MAAAP,GAAAM,KAAA,mBACAkC,KAAAC,IADAzC,SAGA,SAAA0C,GAGA,KAFAA,GAAAA,EAAAjC,KACArB,EAAAsB,KAAAC,sBAAA+B,GACAA,IAEAnC,KAAA,SAAAC,GAGA,MAFAA,GAAAA,EAAAC,KACArB,EAAAsB,KAAAC,sBAAAH,GACAA,MAGAD,KAAA,SAAAoC,GACAN,EAAAO,QACAP,EAAAQ,OAAAF,KAlBAtD,SAoBA,SAAAqD,GACAI,QAAAC,IAAAL,KAvCA,GAAAD,GAAAH,EAAAG,OAAAO,WACAC,EAAAC,EAAAC,MAAAb,EAAAW,SAEAG,EAAAC,EAAAC,QAAAF,OAEAA,IAAA,MAAAH,EAAAM,QAAA,MAAA,GACAhB,IACAa,GAAA,KAAA,KAAAA,GAAAH,EAAAM,QAAA,MAAA,GACAhB,IACAa,GAAA,KAAA,IAAAA,GAAAH,EAAAM,QAAA,MAAA,GACAhB,IACA,IAAAa,GAAAH,EAAAM,QAAA,MAAA,IACAhB,SCjBA9C,QAAAC,OAAA,OACAC,QAAA,8BAAA,SAAA6D,GACAA,EACAC,UAAA,OACAC,uBAAA,KAAA3B,SAAA4B,SAAAC,SAAAC,OAAA,mBAAA,sBAAA,IACAC,eAAA,mBAGArE,QAAAC,OAAA,OACAqE,WAAA,uBAAA,UAAA,UAAA,YAAA,SAAA,aAAA,WAAA,gBAAA,OAAA,sBAAA,QACA,SAAAC,EAAAC,EAAAC,EAAA/D,EAAAf,EAAA+E,EAAAC,EAAAC,EAAAC,EAAAtE,GA2SA,QAAAuE,KACA,MAAA,KAAAxC,SAAA4B,SAAAC,SAAAC,OAAA,mBACA,4BACA,KAAA9B,SAAA4B,SAAAC,SAAAC,OAAA,aACA,kDAEAK,EAAAM,OACA,oBAAAN,EAAAM,OAEA,mBAlTApF,EAAAsB,MAEA+D,iBAAA,KAEAC,oBAAA,WAUArF,QAAAyC,UACAvB,KAAA,WACA,MAAA,IAAAlB,SAAA,SAAAyC,EAAA6C,GAyBA,QAAAC,KAGA,QAAAC,GAAAC,GAEA,GAAAC,IACAC,QAAAF,EAAAG,QAAAD,QAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAjD,GAAA,GAGA,QAAAqD,GAAAzC,GACA,GAAAqC,IACAC,QAAA,KAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAJ,EAAAjC,GAhBA0C,WAAAC,WAAAR,EAAAM,EAAA,GAxBA,GAAA/F,EAAAsB,KAAA4E,uBAAA,CAEA,GAAAC,IAEAA,EAAAnG,EAAAsB,KAAA8E,iBAAA,eAAA,UACAD,EAAAE,eAAA,YAAAF,EAAAP,QACAlD,GAAA,GAKA8C,QAGA,CACA9B,QAAAC,IAAA,uBACA,IAAAgC,IACAC,QAAA,KAEA5F,GAAAsB,KAAAwE,gBAAA,eAAAH,EAAA,GACAjD,GAAA,QAxBAzC,SAiDA,SAAAqD,GACA,IAAAA,EAAAgD,IAIA,KAAAhD,EAHAI,SAAAC,IAAAL,EAAAgD,OAnDArG,SAyDA,SAAAqD,GACAI,QAAAC,IAAAL,MAIAiD,yBAAA,WACA,MAAArB,GAAAsB,aACA,GAEA,GAIAN,qBAAA,WACA,MAAAhB,GAAAuB,OAAAD,aACA,GAEA,GAIAE,mBAAA,SAAAC,EAAAC,GACA,GAAAC,IACAC,MAAAF,EACAG,WAAA,GAAAC,OAAAC,UAEA,OAAA/B,GAAAgC,IAAAP,EAAAE,IAGAM,oBAAA,SAAAR,EAAAS,GAIA,GAHAA,IACAA,EAAA,OAEApH,EAAAsB,KAAA+F,4BAAAV,GAAA,CACA,GAAAE,GAAA3B,EAAAoC,IAAAX,GACAY,EAAAV,EAAAE,UACAS,GAAA,GAAAR,OAAAC,UAAArD,UACA,OAAA4D,GAAAD,EAAA,IAAAH,GACApH,EAAAsB,KAAAmG,wBAAAd,KACA,GAEAE,EAAAC,MAGA,OAAA,GAIAhB,gBAAA,SAAAa,EAAAC,EAAAc,GACAA,IACAA,EAAA,EAEA,IAAAb,IACAC,MAAAF,EACAG,WAAA,GAAAC,OAAAC,UAGA,OADAJ,GAAAc,KAAAC,UAAAf,GACA3B,EAAAuB,OAAAS,IAAAP,EAAAE,EAAAa,IAGAtB,iBAAA,SAAAO,EAAAS,GACAA,IACAA,EAAA,MAEA,IAAAP,GAAA3B,EAAAuB,OAAAa,IAAAX,EACA,IAAAE,EAAA,CACA,GAAAU,GAAAV,EAAAE,UACAS,GAAA,GAAAR,OAAAC,UAAArD,UACA,OAAA4D,GAAAD,EAAA,IAAAH,GACApH,EAAAsB,KAAAuG,oBAAAlB,IACA,GAEAE,EAAAC,MAGA,OAAA,GAIAO,4BAAA,SAAAV,GAIA,IAAA,GAHAmB,GAAA5C,EAAA4C,OACAC,EAAAD,EAAAE,OACAC,GAAA,EACAC,EAAA,EAAAH,EAAAG,EAAAA,IACA,GAAAJ,EAAAI,IAAAvB,EAAA,CACAsB,GAAA,CACA,OAGA,MAAAA,IAGAR,uBAAA,SAAAU,EAAAC,GACA,MAAAA,GACAlD,EAAAmD,YAEAF,EAAAG,QAAA,SAAA3B,GACAzB,EAAAqD,OAAA5B,MAIA,IAGAkB,oBAAA,SAAAlB,GACA,MAAAzB,GAAAuB,OAAA8B,OAAA5B,IAGA6B,YAAAvE,EAAAC,QAAAF,QAEAyE,eAAA,SAAAzE,GAGA,MAFAA,GAAA0E,SAAA1E,GAEAA,GAAA,KACA,KACAA,GAAA,KAAA,KAAAA,EACA,KACAA,GAAA,KAAA,IAAAA,EACA,KACA,IAAAA,EACA,KADA,QAMA2E,YAAA,SAAA7B,GACA,MAAA7B,GAAA0D,YAAA7B,IAGA8B,kBAAA,SAAAC,EAAAC,GACA,MAAAC,GAAAC,aAAAH,EAAAC,IAGAG,eAAA,SAAAC,GACA,GAAAC,GAAA,qCACA,OAAAA,GAAAD,GAGAE,sBAAA,gEAEAC,QAAA,SAAAC,GACA,GAAAC,IAAA,GAAA,IAAA,IACA,OAAA,KAAAD,EAAAE,YAAAxB,QAAA,EAAAe,EAAAC,aAAAM,EAAAE,YAAAD,GAAAvB,OAAA,GAGAyB,sBAAA,WACA,MAAA,uCAGAC,QAAA,WACA5E,EAAA6E,KAAA,WACA3E,KAGA4E,KAAA,WACA5J,EAAA4J,QAGArI,sBAAA,SAAAH,GACAwD,EAAA,kBAAAxD,IAGAyI,UAAA,SAAAC,EAAAxD,GACAtG,EAAA6J,UAAAC,EAAAxD,IAGAyD,aAAA,WACA/J,EAAAgK,WAAA,iBAGAC,gBAAA,WACApF,EAAAN,SAAA2F,KAAA,UAGAC,gBAAA,WACAtF,EAAAN,SAAA2F,KAAA,gBAGAE,WAAA,WACAvF,EAAAN,SAAA8F,UAGAC,eAAA,WACAzF,EAAAN,SAAA2F,KAAA,KAGAK,eAAA,SAAAC,GACA3F,EAAAN,SAAA2F,KAAA/E,IAAAqF,GAGAC,uBAAA,WACAvG,OAAAK,SAAA2F,KAAAvH,SAAAC,UAGA8H,cAAA,SAAAC,GACA,GAAArE,EAOA,OAHAA,GAHAqE,GAAA,gBAAAA,IAAA,IAAAA,EAAA3C,OAGA2C,EAAA,MAFA,uBAKA5F,EAAA6F,MACAvJ,MACAsJ,QAAArE,GAEAuE,YAAA,+BACAC,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,MAMArL,EAAAsB,KAAAgE,sBAEAtF,EAAA4J,KAAA,WACA1F,OAAAoH,QAAA1B,WClTAvJ,QAAAC,OAAA,OACAK,UAAA,oBAAA,aAAA,QAAA,SAAAX,EAAAY,GACA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAeA,QAAAwK,GAAAC,GACA,MAAA5K,GAAAM,KAAA,4BACAsK,eAAAA,IAfAzK,EAAAwK,wBAAA,SAAAC,GACA,GAAAC,GAAAzL,EAAAsB,KAAAoJ,cAAA,gBACAa,GAAAC,GACAE,QAAA,SAAAtK,GACAqK,EAAAE,QACA3L,EAAAsB,KAAAC,sBAAAH,KAEAwK,MAAA,SAAApK,GACAiK,EAAAE,QACA3L,EAAAsB,KAAAC,sBAAAC,WCfAnB,QAAAC,OAAA,OACAuL,OAAA,kBAAA,KAAA,OAAA,UAAA,aAAA,WAAA,SAAAC,EAAAC,EAAAlH,EAAA7E,EAAA+E,GACA,MAAA,UAAA3D,GACA,QAAA4K,GAAAC,EAAAC,EAAA5F,GACA,OACA2F,KAAAA,GAAA,GAAA,EACAC,YAAAA,EACA5F,IAAAA,GAyDA,QAAA6F,KACApH,EAAA6F,MACAwB,SAAA,8BACAtB,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,IAIA,QAAAgB,GAAA1B,GACA5F,EAAAuH,aACAjL,MACAsJ,QAAAA,GAEAyB,SAAA,uBACAtB,UAAA,yBACAC,SAAA,EACAC,WAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,OAAA,EACAC,WAAA,EACAC,eAAA,IACAlK,KAAA,WACAnB,EAAAsB,KAAAiJ,eAAA,iBACA,WACAvK,EAAAsB,KAAAiJ,eAAA,YApFA,GAAA,OAAAnJ,GAAA,gBAAAA,GAAA,CAeA,GAdAA,EAAAc,UACAd,EAAAmL,eACA1H,EAAAN,SAAA2F,KAAA9I,EAAAmL,cAGAnL,EAAAiJ,QACArK,EAAAsB,KAAA8I,aAEAhJ,EAAAoL,QACApL,EAAA0I,MAAA1I,EAAAkF,KACAtG,EAAA6J,UAAAzI,EAAA0I,KAAA1I,EAAAkF,KAIAlF,EAAAqK,QACArK,EAAAqL,GACA,OAAArL,EAAAqL,IACA,IAAA,iBACAN,GACA,MACA,KAAA,UACAE,EAAAjL,EAAAkF,KAOAlF,EAAAsL,QACAtL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,kBAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAuL,cACAvL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,eAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAwL,oBACAxL,EAAA8K,aAAA9K,EAAAkF,KACAtG,EAAAgK,WAAA,qBAAAgC,GAAA,EAAA5K,EAAA8K,YAAA9K,EAAAkF,MAGAlF,EAAAyL,QACAd,EAAAe,KAAA1L,EAAAyL,QAMA,OAAA,MC9DAxM,QAAAC,OAAA,OACAyM,QAAA,WAAA,YAAA,QACA,SAAAjI,EAAAlE,GACA,GAAAoM,KAEA,QAEAA,SAAA,SAAA3L,GACA,MAAAA,GACA2L,EAAA3L,EAGA2L,GAIAC,mBAAA,WACA,MAAArM,GAAA0G,IAAA,qBAGAnC,gBAAA,WACA,MAAA,KAAAxC,SAAA4B,SAAAC,SAAAC,OAAA,mBACA,4BACA,KAAA9B,SAAA4B,SAAAC,SAAAC,OAAA,aACA,kDAEAK,EAAAM,OACA,oBAAAN,EAAAM,OAEA,wBC7BA/E,QAAAC,OAAA,OACAK,UAAA,mBAAA,aAAA,SAAA,SAAAX,EAAAkN,GACA,OACArM,SAAA,KACAC,KAAA,WACAd,EAAA6J,UAAA,SAAAsD,EAAAC,GACA,OAAAD,GACA,IAAA,UACAD,EAAAG,QACAH,EAAAxB,QAAA0B,EACA,MACA,KAAA,UACAF,EAAAG,QACAH,EAAAI,QAAAF,EAAA,WACAG,aAAA,EACAC,cAAA,GAEA,MACA,KAAA,QACAN,EAAAG,QACAH,EAAAtB,MAAAwB,EAAA,SACAG,aAAA,EACAC,cAAA,EACAC,SAAA,GAEA,MACA,SAEAP,EAAAG,UAIArN,EAAA0N,YAAA,WACAR,EAAAG,cAKA1M,UAAA,qBAAA,aAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA4L,cACAV,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,eAAA,SAAAC,EAAAlB,GACA3L,EAAA4L,aAAAD,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA4L,cACAV,MAAA,EACAC,YAAA,GACA5F,IAAA,WAMA3F,UAAA,2BAAA,aAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA6L,oBACAX,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,qBAAA,SAAAC,EAAAlB,GACA3L,EAAA6L,mBAAAF,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA6L,oBACAX,MAAA,EACAC,YAAA,GACA5F,IAAA,WChFAjG,QAAAC,OAAA,OACAK,UAAA,wBAAA,aAAA,UAAA,SAAAX,GACA,OACAa,SAAA,KACAC,KAAA,SAAAC,GACAA,EAAA8M,iBACA5B,MAAA,EACAC,YAAA,GACA5F,IAAA,IAGAtG,EAAA2N,IAAA,kBAAA,SAAAC,EAAAlB,GACA3L,EAAA8M,gBAAAnB,IAGA1M,EAAA2N,IAAA,eAAA,WACA5M,EAAA8M,iBACA5B,MAAA,EACAC,YAAA,GACA5F,IAAA,WCnBAjG,QAAAC,OAAA,OACAK,UAAA,kBAAA,aAAA,QAAA,SAAAX,EAAAY,GAEA,OACAC,SAAA,KACAC,KAAA,SAAAC,GAIA,QAAA+M,GAAAC,GACAhN,EAAAiN,gBACAC,MAAAlN,EAAAmN,SAAAD,MACAE,cAAAJ,GAIAhN,EAAAiN,eAAAC,OAAAlN,EAAAiN,eAAAG,gBACApN,EAAAqN,gBACAC,EAAAtN,EAAAiN,gBACAtC,QAAA,SAAAtK,GACApB,EAAAsB,KAAAC,sBAAAH,GACAL,EAAAmN,SAAAH,aACA1N,QAAAiO,QAAA,oBAAAC,YAAAnN,GACAL,EAAAyN,oBAEA5C,MAAA,SAAA6C,GACAzO,EAAAsB,KAAAC,sBAAAkN,GACA1N,EAAAyN,qBAKA,QAAAH,GAAAK,GACA,GAAAT,GAAAS,EAAAT,MACAF,EAAAW,EAAAP,aACA,OAAAvN,GAAA0G,IAAA,kBAAA2G,EAAA,SAAAvF,SAAAqF,IA5BAhN,EAAAmN,SAAAvG,KAAAgH,MAAA5N,EAAA6N,OAgCA7N,EAAA8N,SAAA,WACAf,EAAApF,SAAA3H,EAAAmN,SAAAH,YAAA,IAIAhN,EAAAqN,cAAA,WACAnK,EAAA,gBAAA6K,OAAA,YAEA/N,EAAAyN,gBAAA,WACAvK,EAAA,gBAAA6K,OAAA","file":"app.min.js","sourcesContent":["function trackDigests(app) {\n    app.run([\"$rootScope\", function ($rootScope) {\n        Promise.setScheduler(function (cb) {\n            $rootScope.$evalAsync(cb);\n        });\n    }]);\n}\n\n//angular sanitize included in textAngular\nvar app = angular.module('app', [\n    'ngSanitize',\n    'ui.bootstrap',\n    'angularUtils.directives.dirDisqus',\n    'toastr',\n    'ngDialog',\n    'ngTable',\n    'LocalStorageModule'\n])\n    .config(['$locationProvider', function ($locationProvider) {\n        $locationProvider.html5Mode({\n            enabled: true\n        });\n    }]);\n\ntrackDigests(app);","angular.module('app')\n    .directive('createAccountScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.createMain = {\n                    isBusy: false\n                };\n\n                $scope.registrationDetails = {\n                    email: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    username: \"\",\n                    password1: \"\",\n                    password2: \"\"\n                };\n\n                $scope.createAccount = function (redirect) {\n                    $scope.createMain.isBusy = true;\n                    return createAccount($scope.registrationDetails, redirect)\n                        .then(function () {\n                            $scope.createMain.isBusy = false;\n                        });\n                };\n\n                function createAccount(details) {\n                    return $http.post('/createAccount', details)\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            return true;\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $rootScope.main.responseStatusHandler(err);\n                            $scope.registrationDetails.password1 = \"\";\n                            $scope.registrationDetails.password2 = \"\";\n                            return true;\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .directive('resetPasswordScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.resetMain = {\n                    isBusy: false\n                };\n\n                $scope.resetFormModel = {\n                    email: \"\",\n                    newPassword: \"\",\n                    confirmNewPassword: \"\"\n                };\n\n                //this is the first step\n                $scope.submitResetPasswordEmail = function () {\n                    $scope.resetMain.isBusy = true;\n                    return $http.post('/api/resetPassword/email', $scope.resetFormModel)\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            //don't remove isBusy here to prevent the user from submitting the details again\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $rootScope.main.responseStatusHandler(err);\n                            $scope.resetFormModel.email = \"\";\n                            $scope.resetFormModel.newPassword = \"\";\n                            $scope.resetFormModel.confirmNewPassword = \"\";\n                            $scope.resetMain.isBusy = false;\n                        });\n                };\n            }\n        };\n    }]);","angular.module('app')\n    .directive('signInScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.signInMain = {\n                    isBusy: false\n                };\n\n                $scope.loginFormModel = {\n                    username: \"\",\n                    password: \"\"\n                };\n\n                $scope.submitLocalLoginForm = function (redirect) {\n                    $scope.signInMain.isBusy = true;\n                    return localUserLogin($scope.loginFormModel, redirect)\n                        .then(function () {\n                            $scope.signInMain.isBusy = false;\n                        });\n                };\n\n                function localUserLogin(loginData, redirect) {\n                    return Promise.resolve()\n                        .then(function () {\n                            if (redirect) {\n                                return $http.post('/localUserLogin?lastpage=' + document.referrer, loginData);\n                            } else {\n                                return $http.post('/localUserLogin', loginData);\n                            }\n                        })\n                        .then(function (resp) {\n                            resp = resp.data;\n                            $rootScope.main.responseStatusHandler(resp);\n                            return true;\n                        })\n                        .catch(function (err) {\n                            err = err.data;\n                            $scope.loginFormModel.password = \"\";\n                            $rootScope.main.responseStatusHandler(err);\n                            return true;\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .directive('imageAdDirective', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope, $element, $attrs) {\n                var adsize = $attrs.adsize.toString();\n                var display = s.words($attrs.display);  //s is underscore string library\n\n                var width = $(window).width();\n\n                if (width >= 1200 && display.indexOf('lg') > -1) {\n                    putImageAd();\n                } else if (width >= 992 && width < 1200 && display.indexOf('md') > -1) {\n                    putImageAd();\n                } else if (width >= 768 && width < 992 && display.indexOf('sm') > -1) {\n                    putImageAd();\n                } else if (width < 768 && display.indexOf('xs') > -1) {\n                    putImageAd();\n                } else {\n                    //don't display\n                }\n\n                function putImageAd() {\n                    Promise.resolve()\n                        .then(function () {\n                            return $http.post('/ad/imageAdHtml', {\n                                size: adsize\n                            })\n                                .catch(function (e) {\n                                    e = e.data;\n                                    $rootScope.main.responseStatusHandler(e);\n                                    throw e;\n                                })\n                                .then(function (resp) {\n                                    resp = resp.data;\n                                    $rootScope.main.responseStatusHandler(resp);\n                                    return resp;\n                                });\n                        })\n                        .then(function (html) {\n                            $element.empty();\n                            $element.append(html);\n                        })\n                        .catch(function (e) {\n                            console.log(e);\n                        });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .config(function (localStorageServiceProvider) {\n        localStorageServiceProvider\n            .setPrefix('app')\n            .setStorageCookieDomain(document.location.hostname.search(\"africanexponent\") !== -1 ? 'africanexponent.com' : '')\n            .setStorageType('localStorage');\n    });\n\nangular.module('app')\n    .controller('UniversalController', ['$filter', '$window', '$location', '$scope', '$rootScope', 'ngDialog', '$anchorScroll', '$sce', 'localStorageService', '$http',\n        function ($filter, $window, $location, $scope, $rootScope, ngDialog, $anchorScroll, $sce, localStorageService, $http) {\n\n            $rootScope.main = {\n\n                userLocationData: null,\n\n                getUserLocationData: function () {\n\n                    //localStorageKey is 'userLocation'\n\n                    var html5GeoOptions = {\n                        enableHighAccuracy: false,\n                        timeout: 30000,\n                        maximumAge: 86400 * 1000 //default to one day\n                    };\n\n                    Promise.resolve()\n                        .then(function () {\n                            return new Promise(function (resolve, reject) {\n\n                                if ($rootScope.main.checkCookieIsEnabled()) {\n\n                                    var loc;\n\n                                    if (loc = $rootScope.main.getKeyFromCookie('userLocation', 86400 * 7)) {  //checks that the cookie is no more than 7 days old\n                                        if (loc.hasOwnProperty('country') && loc.country) {\n                                            resolve(true);\n                                        } else {\n                                            getNewLocationData();\n                                        }\n                                    } else {\n                                        getNewLocationData();\n                                    }\n\n                                } else {\n                                    console.log('Cookie not supported');\n                                    var temp = {\n                                        country: null\n                                    };\n                                    $rootScope.main.saveKeyToCookie('userLocation', temp, 7); //save for next viewed page\n                                    resolve(true);\n                                }\n\n                                function getNewLocationData() {\n                                    geolocator.locateByIP(found, geoError, 2); //true will cause it to fallback to ip address\n\n                                    function found(locationData) {\n\n                                        var temp = {\n                                            country: locationData.address.country\n                                        };\n                                        $rootScope.main.saveKeyToCookie('userLocation', temp, 1); //save for next viewed page\n                                        resolve(true);\n                                    }\n\n                                    function geoError(e) {\n                                        var temp = {\n                                            country: null\n                                        };\n                                        $rootScope.main.saveKeyToCookie('userLocation', temp, 1); //save for next viewed page\n                                        reject(e);\n                                    }\n                                }\n                            });\n                        })\n                        .catch(function (e) {\n                            if (e.msg) {\n                                console.log(e.msg);\n                            }\n                            else {\n                                throw e;\n                            }\n                        })\n                        .catch(function (e) {\n                            console.log(e);\n                        });\n                },\n\n                checkLocalStorageSupport: function () {\n                    if (localStorageService.isSupported) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n\n                checkCookieIsEnabled: function () {\n                    if (localStorageService.cookie.isSupported) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                },\n\n                saveToLocalStorage: function (key, val) {\n                    var object = {\n                        value: val,\n                        timestamp: new Date().getTime()\n                    };\n                    return localStorageService.set(key, object); //returns a boolean\n                },\n\n                getFromLocalStorage: function (key, maxAgeSeconds) {\n                    if (!maxAgeSeconds) {\n                        maxAgeSeconds = 86400; //default to one day\n                    }\n                    if ($rootScope.main.checkIfExistsOnLocalStorage(key)) {\n                        var object = localStorageService.get(key);\n                        var dateString = object.timestamp;\n                        var now = new Date().getTime().toString();\n                        if (now - dateString > (maxAgeSeconds * 1000)) {\n                            $rootScope.main.removeFromLocalStorage([key]); //remove expired item from local storage\n                            return false;\n                        } else {\n                            return object.value;\n                        }\n                    } else {\n                        return false;\n                    }\n                },\n\n                saveKeyToCookie: function (key, val, maxAgeInDays) {\n                    if (!maxAgeInDays) {\n                        maxAgeInDays = 2; //defaults to 2 day(s)\n                    }\n                    var object = {\n                        value: val,\n                        timestamp: new Date().getTime()\n                    };\n                    object = JSON.stringify(object);\n                    return localStorageService.cookie.set(key, object, maxAgeInDays); //returns a boolean\n                },\n\n                getKeyFromCookie: function (key, maxAgeSeconds) {\n                    if (!maxAgeSeconds) {\n                        maxAgeSeconds = 86400; //default to one day\n                    }\n                    var object = localStorageService.cookie.get(key);\n                    if (object) {\n                        var dateString = object.timestamp;\n                        var now = new Date().getTime().toString();\n                        if ((now - dateString) > (maxAgeSeconds * 1000)) {\n                            $rootScope.main.removeKeyFromCookie(key); //remove expired item from local storage\n                            return false;\n                        } else {\n                            return object.value;\n                        }\n                    } else {\n                        return false;\n                    }\n                },\n\n                checkIfExistsOnLocalStorage: function (key) {\n                    var keys = localStorageService.keys();\n                    var len = keys.length;\n                    var exists = false;\n                    for (var i = 0; i < len; i++) {\n                        if (keys[i] == key) {\n                            exists = true;\n                            break;\n                        }\n                    }\n                    return exists;\n                },\n\n                removeFromLocalStorage: function (keyArray, all) {  //if all is true, it clears all keys\n                    if (all) {\n                        return localStorageService.clearAll();\n                    } else {\n                        keyArray.forEach(function (key) {\n                            localStorageService.remove(key);\n                        });\n                    }\n\n                    return true;\n                },\n\n                removeKeyFromCookie: function (key) {  //if all is true, it clears all keys\n                    return localStorageService.cookie.remove(key);\n                },\n\n                windowWidth: $(window).width(),\n\n                bootStrapWidth: function (width) {\n                    width = parseInt(width);\n\n                    if (width >= 1200) {\n                        return 'lg';\n                    } else if (width >= 992 && width < 1200) {\n                        return 'md';\n                    } else if (width >= 768 && width < 992) {\n                        return 'sm';\n                    } else if (width < 768) {\n                        return 'xs';\n                    }\n                },\n\n\n                trustAsHtml: function (value) {\n                    return $sce.trustAsHtml(value);\n                },\n\n                intersectionArray: function (arr1, arr2) {\n                    return _.intersection(arr1, arr2);\n                },\n\n                getAmazonS3Url: function (keyWithoutSlash) {\n                    var domain = 'https://assets.africanexponent.com/';\n                    return domain + keyWithoutSlash;\n                },\n\n                defaultProfilePicture: '/public/imgsmin/default_avatar/default_avatar_red_462_462.png',\n\n                isAdmin: function (user) {\n                    var arr = [77, 100, 101];\n                    return user.adminLevels.length === 0 ? false : _.intersection(user.adminLevels, arr).length > 0;\n                },\n\n                assetsDomainWithSlash: function () {\n                    return 'https://assets.africanexponent.com/';\n                },\n\n                goToTop: function () {\n                    $location.hash('pageTop');\n                    $anchorScroll();\n                },\n\n                back: function () {\n                    $rootScope.back();\n                },\n\n                responseStatusHandler: function (resp) {\n                    $filter('responseFilter')(resp);\n                },\n\n                showToast: function (type, msg) {\n                    $rootScope.showToast(type, msg);\n                },\n\n                clearBanners: function () {\n                    $rootScope.$broadcast('clearBanners');\n                },\n\n                redirectToAbout: function () {\n                    $window.location.href = '/about';\n                },\n\n                redirectToLogin: function () {\n                    $window.location.href = '/notLoggedIn';\n                },\n\n                reloadPage: function () {\n                    $window.location.reload();\n                },\n\n                redirectToHome: function () {\n                    $window.location.href = '/';\n                },\n\n                redirectToPage: function (pathWithFirstSlash) {\n                    $window.location.href = getLocationHost() + pathWithFirstSlash;\n                },\n\n                redirectToPreviousPage: function () {\n                    window.location.href = document.referrer;\n                },\n\n                showExecuting: function (message) {\n                    var msg;\n                    if (!message || typeof message !== 'string' || message.length === 0) {\n                        msg = 'Performing action...';\n                    } else {\n                        msg = message + '...';\n                    }\n\n                    return ngDialog.open({\n                        data: {\n                            message: msg\n                        },\n                        templateUrl: 'views/dialogs/executing.html',\n                        className: 'ngdialog-theme-default',\n                        overlay: true,\n                        showClose: false,\n                        closeByEscape: false,\n                        closeByDocument: false,\n                        cache: true,\n                        trapFocus: false,\n                        preserveFocus: true\n                    });\n                }\n\n            };\n\n            $rootScope.main.getUserLocationData();\n\n            $rootScope.back = function () {\n                window.history.back();\n            };\n\n            function getLocationHost() {\n                if (document.location.hostname.search(\"africanexponent\") !== -1) {\n                    return \"//www.africanexponent.com\";\n                } else if (document.location.hostname.search(\"amazonaws\") !== -1) {\n                    return \"//ec2-54-85-41-117.compute-1.amazonaws.com:3000\";\n                } else {\n                    if ($location.port()) {\n                        return 'http://localhost' + \":\" + $location.port();\n                    } else {\n                        return 'http://localhost';\n                    }\n                }\n            }\n        }\n    ]);","angular.module('app')\n    .directive('resendEmailScope', ['$rootScope', '$http', function ($rootScope, $http) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.resendConfirmationEmail = function (userUniqueCuid) {\n                    var dialog = $rootScope.main.showExecuting('Sending Email');\n                    resendConfirmationEmail(userUniqueCuid)\n                        .success(function (resp) {\n                            dialog.close();\n                            $rootScope.main.responseStatusHandler(resp);\n                        })\n                        .error(function (err) {\n                            dialog.close();\n                            $rootScope.main.responseStatusHandler(err);\n                        });\n                };\n\n                function resendConfirmationEmail(userUniqueCuid) {\n                    return $http.post('/resendConfirmationEmail', {\n                        userUniqueCuid: userUniqueCuid\n                    });\n                }\n            }\n        };\n    }]);","angular.module('app')\n    .filter(\"responseFilter\", ['$q', '$log', '$window', '$rootScope', 'ngDialog', function ($q, $log, $window, $rootScope, ngDialog) {\n        return function (resp) {\n            function makeBanner(show, bannerClass, msg) {\n                return {\n                    show: show ? true : false,\n                    bannerClass: bannerClass,\n                    msg: msg\n                };\n            }\n\n            if (resp !== null && typeof resp === 'object') {\n                if (resp.redirect) {\n                    if (resp.redirectPage) {\n                        $window.location.href = resp.redirectPage;\n                    }\n                }\n                if (resp.reload) {\n                    $rootScope.main.reloadPage();\n                }\n                if (resp.notify) {\n                    if (resp.type && resp.msg) {\n                        $rootScope.showToast(resp.type, resp.msg);\n                        //showNotificationBar(resp.type, resp.msg);\n                    }\n                }\n                if (resp.dialog) {\n                    if (resp.id) {\n                        switch (resp.id) {\n                            case \"not-authorized\":\n                                not_authorized_dialog();\n                                break;\n                            case \"sign-in\":\n                                sign_in_dialog(resp.msg);\n                                break;\n                            default:\n                            //do nothing\n                        }\n                    }\n                }\n                if (resp.banner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('universalBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.signInBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('signInBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.registrationBanner) {\n                    if (resp.bannerClass && resp.msg) {\n                        $rootScope.$broadcast('registrationBanner', makeBanner(true, resp.bannerClass, resp.msg));\n                    }\n                }\n                if (resp.reason) {\n                    $log.warn(resp.reason);\n                }\n            } else {\n                //do nothing\n            }\n\n            return true;\n\n            function not_authorized_dialog() {\n                ngDialog.open({\n                    template: '/dialog/not-authorized.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: true,\n                    closeByDocument: true,\n                    cache: false,\n                    trapFocus: true,\n                    preserveFocus: true\n                });\n            }\n\n            function sign_in_dialog(message) {\n                ngDialog.openConfirm({\n                    data: {\n                        message: message\n                    },\n                    template: '/dialog/sign-in.html',\n                    className: 'ngdialog-theme-default',\n                    overlay: true,\n                    showClose: false,\n                    closeByEscape: false,\n                    closeByDocument: false,\n                    cache: true,\n                    trapFocus: true,\n                    preserveFocus: true\n                }).then(function () {\n                    $rootScope.main.redirectToPage('/notLoggedIn');\n                }, function () {\n                    $rootScope.main.redirectToPage('/about');\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .factory('globals', ['$location', '$http',\n        function ($location, $http) {\n            var userData = {};\n\n            return {\n\n                userData: function (data) {\n                    if (data) {\n                        userData = data;\n                        return userData;\n                    } else {\n                        return userData;\n                    }\n                },\n\n                userDataFromServer: function () {\n                    return $http.get('/api/getUserData');\n                },\n\n                getLocationHost: function () {\n                    if (document.location.hostname.search(\"africanexponent\") !== -1) {\n                        return \"//www.africanexponent.com\";\n                    } else if (document.location.hostname.search(\"amazonaws\") !== -1) {\n                        return \"//ec2-54-85-41-117.compute-1.amazonaws.com:3000\";\n                    } else {\n                        if ($location.port()) {\n                            return 'http://localhost' + \":\" + $location.port();\n                        } else {\n                            return 'http://localhost';\n                        }\n                    }\n                }\n            };\n        }\n    ]);","angular.module('app')\n    .directive('toastrDirective', ['$rootScope', 'toastr', function ($rootScope, toastr) {\n        return {\n            restrict: 'AE',\n            link: function () {\n                $rootScope.showToast = function (toastType, text) {\n                    switch (toastType) {\n                        case \"success\":\n                            toastr.clear();\n                            toastr.success(text);\n                            break;\n                        case \"warning\":\n                            toastr.clear();\n                            toastr.warning(text, 'Warning', {\n                                closeButton: true,\n                                tapToDismiss: true\n                            });\n                            break;\n                        case \"error\":\n                            toastr.clear();\n                            toastr.error(text, 'Error', {\n                                closeButton: true,\n                                tapToDismiss: true,\n                                timeOut: false\n                            });\n                            break;\n                        default:\n                            //clears current list of toasts\n                            toastr.clear();\n                    }\n                };\n\n                $rootScope.clearToasts = function () {\n                    toastr.clear();\n                };\n            }\n        };\n    }])\n    .directive('signInBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.signInBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('signInBanner', function (event, banner) {\n                    $scope.signInBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.signInBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }])\n    .directive('registrationBannerScope', ['$rootScope', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.registrationBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('registrationBanner', function (event, banner) {\n                    $scope.registrationBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.registrationBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .directive('universalBannerScope', ['$rootScope', 'globals', function ($rootScope) {\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n                $scope.universalBanner = {\n                    show: false,\n                    bannerClass: \"\",\n                    msg: \"\"\n                };\n\n                $rootScope.$on('universalBanner', function (event, banner) {\n                    $scope.universalBanner = banner;\n                });\n\n                $rootScope.$on('clearBanners', function () {\n                    $scope.universalBanner = {\n                        show: false,\n                        bannerClass: \"\",\n                        msg: \"\"\n                    };\n                });\n            }\n        };\n    }]);","angular.module('app')\n    .directive('postTopicScope', ['$rootScope', '$http', function ($rootScope, $http) {\n\n        return {\n            restrict: 'AE',\n            link: function ($scope) {\n\n                $scope.theModel = JSON.parse($scope.model);\n\n                function getPostTopic(pageNumber) {\n                    $scope.mainTopicModel = {\n                        topic: $scope.theModel.topic,\n                        requestedPage: pageNumber\n                    };\n\n\n                    if ($scope.mainTopicModel.topic && $scope.mainTopicModel.requestedPage) {\n                        $scope.buttonLoading();\n                        topicSearch($scope.mainTopicModel)\n                            .success(function (resp) {\n                                $rootScope.main.responseStatusHandler(resp);\n                                $scope.theModel.pageNumber++;\n                                angular.element('#appendNextPosts').replaceWith(resp);\n                                $scope.finishedLoading();\n                            })\n                            .error(function (errResp) {\n                                $rootScope.main.responseStatusHandler(errResp);\n                                $scope.finishedLoading();\n                            });\n                    }\n                }\n\n                function topicSearch(topicObject) {\n                    var topic = topicObject.topic;\n                    var pageNumber = topicObject.requestedPage;\n                    return $http.get('/partial/topic/' + topic + '?page=' + parseInt(pageNumber));\n                }\n\n\n                $scope.showMore = function () {\n                    getPostTopic(parseInt($scope.theModel.pageNumber) + 1);\n                };\n\n                //button loading state\n                $scope.buttonLoading = function () {\n                    $('#showMoreBtn').button('loading');\n                };\n                $scope.finishedLoading = function () {\n                    $('#showMoreBtn').button('reset');\n                };\n            }\n        };\n    }]);"],"sourceRoot":"/source/"}