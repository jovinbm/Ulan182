function trackDigests(t){t.run(["$rootScope",function(t){Promise.setScheduler(function(e){t.$evalAsync(e)})}])}var app=angular.module("app",["ngSanitize","ui.bootstrap","toastr","ui.router","ngDialog","LocalStorageModule","angular-loading-bar","ngAnimate"]);app.config(["$stateProvider","$urlRouterProvider","$interpolateProvider",function(t,e,n){n.startSymbol("{[{"),n.endSymbol("}]}"),e.when("/home","/home/welcome"),e.otherwise("/index"),t.state("index",{url:"/index",templateUrl:"_index.html"}).state("register",{url:"/register",templateUrl:"_create_account.html"}).state("login",{url:"/login",templateUrl:"_sign_in.html"}).state("home",{url:"/home",templateUrl:"_homepage.html"}).state("home.welcome",{url:"/welcome",views:{controllerCol:{templateUrl:"_welcome.html"},map:{templateUrl:"_main_map.html"}}}).state("home.requestUber",{url:"/requestUber",views:{controllerCol:{templateUrl:"_request_uber.html"},map:{templateUrl:"_main_map.html"}}}).state("home.rideStatus",{url:"/rideStatus",views:{controllerCol:{templateUrl:"_ride_status.html"},map:{templateUrl:"_main_map.html"}}}).state("home.priceEstimator",{url:"/estimator",views:{controllerCol:{templateUrl:"_price_estimates.html"},map:{templateUrl:"_main_map.html"}}}).state("home.connectToUber",{url:"/connect",views:{controllerCol:{templateUrl:"_connect_to_uber.html"},map:{templateUrl:"_main_map.html"}}})}]),app.run(["$rootScope","$state","$stateParams",function(t,e,n){t.$state=e,t.$stateParams=n}]),trackDigests(app),angular.module("app").config(["localStorageServiceProvider",function(t){t.setPrefix("app").setStorageCookieDomain(-1!==document.location.hostname.search("uber")?"uber.org":"").setStorageType("localStorage")}]),angular.module("app").controller("UniversalController",["$filter","$window","$location","$scope","$rootScope","ngDialog","$anchorScroll","localStorageService","$http","$state","toastr","$interval",function(t,e,n,r,a,o,i,s,u,c,l,d){a.main={uberRideStatus:null,uberRideRequestStatuses:{processing:"Processing",no_drivers_available:"No drivers available",accepted:"Accepted",arriving:"Arriving",in_progress:"In progress",driver_canceled:"Driver canceled",rider_canceled:"Rider canceled",completed:"Completed"},getRideStatus:function(){return Promise.resolve().then(function(){return console.log("checking ride status"),u.post("/api/getRideStatus",{}).then(function(t){return t=t.data,a.main.responseStatusHandler(t),t})["catch"](function(t){throw t=t.data,a.main.responseStatusHandler(t),t})}).then(function(t){return a.main.uberRideStatus=t.obj,a.main.uberRideStatus?(a.main.uberRideStatus.driver&&(a.main.uberRideStatus.driver.ratingArray=new Array(Math.ceil(a.main.uberRideStatus.driver.rating))),console.log(JSON.stringify(a.main.uberRideStatus)),!0):!0})["catch"](function(t){return console.log(t),!0}).then(function(){return Promise.delay(1e4).then(function(){return a.main.getRideStatus()})})},classes:{body:"index"},userData:null,userLocation:{latitude:"",longitude:""},updateUserLocation:function(t,e){a.main.userLocation.latitude=parseFloat(t).toFixed(10),a.main.userLocation.longitude=parseFloat(e).toFixed(10)},getUserData:function(){return Promise.resolve().then(function(){return u.post("/api/getUserData",{}).then(function(t){return t=t.data,a.main.responseStatusHandler(t),t.userData})["catch"](function(t){throw t=t.data,a.main.responseStatusHandler(t),t})}).then(function(t){return t?a.main.userData=t:a.main.userData=null,!0}).then(function(){a.main.userData?a.main.changeState("home",["index","register","login"],null):a.main.changeState("index",null,["index","register","login"])})["catch"](function(t){return console.log(t),!0})},getCurrentState:function(){return c.current.name},changeState:function(t,e,n){var r=a.main.getCurrentState();if(e)e.indexOf(r)>-1&&c.go(t);else if(n)-1==n.indexOf(r)&&c.go(t);else{if(!t)return!0;c.go(t)}},startIntervalTimer:function(t,e){return d(function(){r.blood_1>0&&r.blood_2>0?(r.blood_1=r.blood_1-3,r.blood_2=r.blood_2-4):r.stopFight()},100)},checkLocalStorageSupport:function(){return s.isSupported?!0:!1},checkCookieIsEnabled:function(){return s.cookie.isSupported?!0:!1},saveToLocalStorage:function(t,e){var n={value:e,timestamp:(new Date).getTime()};return s.set(t,n)},getFromLocalStorage:function(t,e){if(e||(e=86400),a.main.checkIfExistsOnLocalStorage(t)){var n=s.get(t),r=n.timestamp,o=(new Date).getTime().toString();return o-r>1e3*e?(a.main.removeFromLocalStorage([t]),!1):n.value}return!1},saveKeyToCookie:function(t,e,n){n||(n=2);var r={value:e,timestamp:(new Date).getTime()};return r=JSON.stringify(r),s.cookie.set(t,r,n)},getKeyFromCookie:function(t,e){e||(e=86400);var n=s.cookie.get(t);if(n){var r=n.timestamp,o=(new Date).getTime().toString();return o-r>1e3*e?(a.main.removeKeyFromCookie(t),!1):n.value}return!1},checkIfExistsOnLocalStorage:function(t){for(var e=s.keys(),n=e.length,r=!1,a=0;n>a;a++)if(e[a]==t){r=!0;break}return r},removeFromLocalStorage:function(t,e){return e?s.clearAll():(t.forEach(function(t){s.remove(t)}),!0)},removeKeyFromCookie:function(t){return s.cookie.remove(t)},goToTop:function(){n.hash("navigation"),i()},back:function(){a.back()},responseStatusHandler:function(e){t("responseFilter")(e)},showToast:function(t,e){switch(t){case"success":l.clear(),l.success(e);break;case"warning":l.clear(),l.warning(e,"Warning",{closeButton:!0,tapToDismiss:!0});break;case"error":l.clear(),l.error(e,"Error",{closeButton:!0,tapToDismiss:!0,timeOut:!1});break;default:l.clear()}},clearToasts:function(){l.clear()},redirectToIndex:function(){e.location.href="/index.app"},redirectToLogin:function(){e.location.href="/notLoggedIn"},reloadPage:function(){e.location.reload()},redirectToHome:function(){e.location.href="/"},redirectToPage:function(t){e.location.href=t},redirectToPreviousPage:function(){window.location.href=document.referrer},showExecuting:function(t){var e;return e=t&&"string"==typeof t&&0!==t.length?t+"...":"Performing action...",o.open({data:{message:e},templateUrl:"_executing_dialog",className:"ngdialog-theme-default",overlay:!0,showClose:!1,closeByEscape:!1,closeByDocument:!1,cache:!0,trapFocus:!1,preserveFocus:!0})}},r.checkUberRide=function(){a.main.uberRideStatus&&a.main.changeState("home.rideStatus",null,["home.rideStatus"])},a.$on("$stateChangeStart",function(t,e,n,r,o){a.main.getUserData()}),a.$on("$stateChangeSuccess",function(t,e,n,a,o){r.checkUberRide()}),r.$watch(function(){return a.main.uberRideStatus},function(){r.checkUberRide()}),a.main.getRideStatus()}]),angular.module("app").controller("createAccountController",["$rootScope","$http",function(t,e){t.main.classes.body="account-crud"}]).directive("createAccountScope",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n){function r(r){return e.post("/api/createAccount",r).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),n.registrationDetails.password1="",n.registrationDetails.password2="",!0})}n.createMain={isBusy:!1},n.registrationDetails={email:"",firstName:"",lastName:"",username:"",password1:"",password2:""},n.createAccount=function(t){return n.createMain.isBusy=!0,r(n.registrationDetails,t).then(function(){n.createMain.isBusy=!1})}}}}]),angular.module("app").directive("logoutScope",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n){n.logout=function(){return Promise.resolve().then(function(){return e.post("api/logoutClient",{}).then(function(e){return console.log(e),e=e.data,t.main.responseStatusHandler(e),t.main.userData=null,!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),!0})})["catch"](function(t){return console.log(t),!0})}}}}]),angular.module("app").controller("signInController",["$rootScope","$http",function(t,e){t.main.classes.body="account-crud"}]).directive("signInScope",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n){function r(r){return Promise.resolve().then(function(){return e.post("/api/localUserLogin",r)}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,n.loginFormModel.password="",t.main.responseStatusHandler(e),!0})}n.signInMain={isBusy:!1},n.loginFormModel={username:"",password:""},n.submitLocalLoginForm=function(){return n.signInMain.isBusy=!0,r(n.loginFormModel).then(function(){n.signInMain.isBusy=!1})}}}}]),angular.module("app").directive("signInBannerScope",["$rootScope",function(t){return{restrict:"AE",link:function(e){e.signInBanner={show:!1,bannerClass:"",msg:""},t.$on("signInBanner",function(t,n){e.signInBanner=n}),t.$on("clearBanners",function(){e.signInBanner={show:!1,bannerClass:"",msg:""}})}}}]).directive("registrationBannerScope",["$rootScope",function(t){return{restrict:"AE",link:function(e){e.registrationBanner={show:!1,bannerClass:"",msg:""},t.$on("registrationBanner",function(t,n){e.registrationBanner=n}),t.$on("clearBanners",function(){e.registrationBanner={show:!1,bannerClass:"",msg:""}})}}}]),angular.module("app").directive("universalBannerScope",["$rootScope","globals",function(t){return{restrict:"AE",link:function(e){e.universalBanner={show:!1,bannerClass:"",msg:""},t.$on("universalBanner",function(t,n){e.universalBanner=n}),t.$on("clearBanners",function(){e.universalBanner={show:!1,bannerClass:"",msg:""}})}}}]),angular.module("app").controller("indexController",["$rootScope","$http",function(t,e){t.main.classes.body="index"}]).directive("indexnScope",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(t){}}}]),angular.module("app").controller("homeCoreController",["$rootScope","$scope","$http",function(t,e,n){t.main.classes.body="homepage",$("body .leftCol").matchHeight({byRow:!0,property:"height",target:$("body .mapCol")}),e.$watch(function(){return t.main.userData},function(e,n){e&&""==e.uber.access_token&&t.main.changeState("home.connectToUber")})}]).factory("LocationService",function(){var t=({lat:lat,lng:lng},function(){data.lastUpdated=new Date,data.calls+=1,console.log("updateTimer: "+data.lastUpdated),$timeout(t,500)});return t(),{data:data}}).directive("locationSearchBox",["$rootScope","$http",function(t,e){return{restrict:"AE",scope:{model:"=locationModel",update:"&locationUpdate"},templateUrl:"_location_search_box.html",link:function(t,e){angular.element(e.find("input.geoField")).geocomplete({details:angular.element(e.find(".details"))}).bind("geocode:result",function(){var n=angular.element(e.find(".details input.lat")).val(),r=angular.element(e.find(".details input.lng")).val(),a=angular.element(e.find(".details input.formatted_address")).val();t.update(n,r,a)})}}}]).directive("uberConnect",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n){n.uberConnect={isBusy:!1,status:"",getUberAuthorizationUrl:function(){return n.uberConnect.isBusy=!0,n.uberConnect.status="Connecting...",Promise.resolve().then(function(){return e.post("/api/getUberAuthorizationUrl",{}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(e){return n.uberConnect.isBusy=!1,t.main.redirectToPage(e.url),!0})["catch"](function(t){return n.uberConnect.isBusy=!1,console.log(t),!0})}}}}}]).controller("requestUberController",["$rootScope","$scope","$http",function(t,e,n){e.requestUberControllerMain={priceEstimateArray:[],timeEstimateArray:[],products:[],getProducts:function(){var r,a;return Promise.resolve().then(function(){return t.map._getMyPosition(t.map)}).then(function(){if(r=t.main.userLocation.latitude,a=t.main.userLocation.longitude,r||a)return!0;throw{code:600}}).then(function(){return n.post("/api/getProducts",{latitude:r,longitude:a}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(t){return e.requestUberControllerMain.products=t.obj.products,!0})["catch"](function(e){if(600!==e.code)throw e;t.main.showToast("warning","We could not determine your precise location to list the available products in your area")})["catch"](function(t){return console.log(t),!0})}},e.requestUberControllerMain.getProducts()}]).directive("requestUberDirective",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n,r,a){n.testBoxModel={lat:2,lng:"",formatted_address:"",update:function(t,e,n){console.log("yes2"),this.lat=t,this.lng=e,this.formatted_address=n}},n.$watch(function(){return n.testBoxModel},function(t){console.log("$scope.testBoxModel"),console.log(JSON.stringify(t))}),n.requestUberMain={isBusy:!1,status:"",start_latitude:"",start_longitude:"",start_formatted_address:"",end_latitude:"",end_longitude:"",end_formatted_address:"",product_id:"",selectedProductPriceEstimate:{},selectedProduct:{},changeProductId:function(t,e){t&&(n.requestUberMain.product_id=t,n.requestUberControllerMain.products.forEach(function(e){e.product_id==t&&(n.requestUberMain.selectedProduct=e)}),n.requestUberControllerMain.priceEstimateArray.forEach(function(t){t.localized_display_name.toLowerCase()==e.toLowerCase()&&(n.requestUberMain.selectedProductPriceEstimate=t)}),n.requestUberControllerMain.timeEstimateArray.forEach(function(t){t.display_name.toLowerCase()==e.toLowerCase()&&(n.requestUberMain.selectedProduct.estimate=Math.ceil(t.estimate/60))}))},requestUber:function(){return n.requestUberMain.isBusy=!0,n.requestUberMain.status="Requesting...",Promise.resolve().then(function(){if(n.requestUberMain.start_latitude&&n.requestUberMain.start_longitude&&n.requestUberMain.end_latitude&&n.requestUberMain.end_longitude&&n.requestUberMain.product_id)return!0;throw{code:600}}).then(function(){return e.post("/api/requestUber",{start_latitude:n.requestUberMain.start_latitude,start_longitude:n.requestUberMain.start_longitude,end_latitude:n.requestUberMain.end_latitude,end_longitude:n.requestUberMain.end_longitude,product_id:n.requestUberMain.product_id}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(e){return n.requestUberMain.isBusy=!1,t.main.getRideStatus(),!0})["catch"](function(e){if(600!==e.code)throw e;t.main.showToast("warning","Some fields are missing"),n.requestUberMain.isBusy=!1})["catch"](function(t){return n.requestUberMain.isBusy=!1,console.log(t),!0})},getPriceEstimate:function(){return n.requestUberMain.start_latitude&&n.requestUberMain.start_longitude&&n.requestUberMain.end_latitude&&n.requestUberMain.end_longitude?(n.requestUberMain.isBusy=!0,n.requestUberMain.status="Getting cost estimates...",Promise.resolve().then(function(){return e.post("/api/getPriceEstimate",{start_latitude:n.requestUberMain.start_latitude,start_longitude:n.requestUberMain.start_longitude,end_latitude:n.requestUberMain.end_latitude,end_longitude:n.requestUberMain.end_longitude}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(t){return n.requestUberMain.isBusy=!1,n.requestUberControllerMain.priceEstimateArray=t.obj.prices,!0})["catch"](function(t){return n.uberConnect.isBusy=!1,console.log(t),!0})):void 0},getTimeEstimate:function(){return n.requestUberMain.start_latitude&&n.requestUberMain.start_longitude?(n.requestUberMain.isBusy=!0,n.requestUberMain.status="Getting time estimates...",Promise.resolve().then(function(){return e.post("/api/getTimeEstimate",{start_latitude:n.requestUberMain.start_latitude,start_longitude:n.requestUberMain.start_longitude}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(t){return n.requestUberMain.isBusy=!1,n.requestUberControllerMain.timeEstimateArray=t.obj.times,!0})["catch"](function(t){return n.uberConnect.isBusy=!1,console.log(t),!0})):void 0}},angular.element(".start input.geoField").geocomplete({details:".start .details"}).bind("geocode:result",function(t,e){var r=angular.element(".start .details input.lat").val(),a=angular.element(".start .details input.lng").val(),o=angular.element(".start .details input.formatted_address").val();r&&a&&(n.updateStartLocation(r,a,o),n.drawRoute())}),angular.element(".end input.geoField").geocomplete({details:".end .details"}).bind("geocode:result",function(t,e){var r=angular.element(".end .details input.lat").val(),a=angular.element(".end .details input.lng").val(),o=angular.element(".end .details input.formatted_address").val();r&&a&&(n.updateEndLocation(r,a,o),n.drawRoute())}),n.updateStartLocation=function(e,r,a){e=parseFloat(e).toFixed(10),r=parseFloat(r).toFixed(10),a&&(a=a.toString()),e&&r&&(n.requestUberMain.start_latitude=e,n.requestUberMain.start_longitude=r,n.requestUberMain.start_formatted_address=a,t.map._addMarker(e,r,a),t.map._setCenter(e,r),n.requestUberMain.getPriceEstimate(),n.requestUberMain.getTimeEstimate())},n.updateEndLocation=function(e,r,a){e=parseFloat(e).toFixed(10),r=parseFloat(r).toFixed(10),a&&(a=a.toString()),e&&r&&(n.requestUberMain.end_latitude=e,n.requestUberMain.end_longitude=r,n.requestUberMain.end_formatted_address=a,t.map._addMarker(e,r,a),n.requestUberMain.getPriceEstimate(),n.requestUberMain.getTimeEstimate())},n.drawRoute=function(){n.requestUberMain.start_latitude&&n.requestUberMain.end_latitude&&(t.map._setCenter(n.requestUberMain.start_latitude,n.requestUberMain.start_longitude),t.map._drawRoute([n.requestUberMain.start_latitude,n.requestUberMain.start_longitude],[n.requestUberMain.end_latitude,n.requestUberMain.end_longitude]))},n.startAtMyLocation=function(){return Promise.resolve().then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:t.map._getMyPosition(t.map).then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:(t.main.showToast("warning","Could not find your position"),null)})}).then(function(t){t&&(n.requestUberMain.start_latitude=t[0],n.requestUberMain.start_longitude=t[1])})["catch"](function(e){console.log(e),t.main.showToast("warning","An error occurred while trying to pin point your location")})},n.endAtMyLocation=function(){return Promise.resolve().then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:t.map._getMyPosition(t.map).then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:(t.main.showToast("warning","Could not find your position"),null)})}).then(function(t){t&&(n.requestUberMain.end_latitude=t[0],n.requestUberMain.end_longitude=t[1])})["catch"](function(e){console.log(e),t.main.showToast("warning","An error occurred while trying to pin point your location")})}}}}]).directive("uberRideStatusDirective",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n,r,a){n.uberRideStatusMain={driver_latitude:null,driver_longitude:null,driver_marker:null,updateUberRequestSandbox:function(){Promise.resolve().then(function(){return Promise.delay(15e3)}).then(function(){return e.post("/api/updateUberRequestSandbox",{status:"accepted"}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),!0})}).then(function(){return Promise.delay(6e4)}).then(function(){return e.post("/api/updateUberRequestSandbox",{status:"arriving"}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),!0})}).then(function(){return Promise.delay(15e3)}).then(function(){return e.post("/api/updateUberRequestSandbox",{status:"in_progress"}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),!0})}).then(function(){return Promise.delay(12e4)}).then(function(){return e.post("/api/updateUberRequestSandbox",{status:"completed"}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),!0})["catch"](function(e){return e=e.data,t.main.responseStatusHandler(e),!0})})["catch"](function(t){return console.log(t),!0})}},n.uberRideStatusMain.updateUberRequestSandbox(),n.$watch(function(){return t.main.uberRideStatus},function(e){e.location&&(n.uberRideStatusMain.driver_latitude=e.location.latitude,n.uberRideStatusMain.driver_longitude=e.location.longitude,"in_progress"==e.status&&(t.main.updateUserLocation(n.uberRideStatusMain.driver_latitude,n.uberRideStatusMain.driver_longitude),t.map._setCenter(n.uberRideStatusMain.driver_latitude,n.uberRideStatusMain.driver_longitude)),n.uberRideStatusMain.driver_marker?(t.map._removeMarker(n.uberRideStatusMain.driver_marker),n.uberRideStatusMain.driver_marker=t.map._addMarker(n.uberRideStatusMain.driver_latitude,n.uberRideStatusMain.driver_longitude)):n.uberRideStatusMain.driver_marker=t.map._addMarker(n.uberRideStatusMain.driver_latitude,n.uberRideStatusMain.driver_longitude))})}}}]).controller("priceEstimatorController",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(t){t.priceEstimateArray=[]}}}]).directive("priceEstimatorResults",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(t){}}}]).directive("priceEstimator",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(n,r,a){n.priceEstimator={isBusy:!1,status:"",start_latitude:"",start_longitude:"",start_formatted_address:"",end_latitude:"",end_longitude:"",end_formatted_address:"",getPriceEstimate:function(){return n.priceEstimator.isBusy=!0,n.priceEstimator.status="Calculating...",Promise.resolve().then(function(){if(n.priceEstimator.start_latitude&&n.priceEstimator.start_longitude&&n.priceEstimator.end_latitude&&n.priceEstimator.end_longitude)return!0;throw{code:600}}).then(function(){return e.post("/api/getPriceEstimate",{start_latitude:n.priceEstimator.start_latitude,start_longitude:n.priceEstimator.start_longitude,end_latitude:n.priceEstimator.end_latitude,end_longitude:n.priceEstimator.end_longitude}).then(function(e){return e=e.data,t.main.responseStatusHandler(e),e})["catch"](function(e){throw e=e.data,t.main.responseStatusHandler(e),e})}).then(function(t){return n.priceEstimator.isBusy=!1,n.priceEstimateArray=t.obj.prices,!0})["catch"](function(e){if(600!==e.code)throw e;t.main.showToast("warning","Some fields are missing"),n.priceEstimator.isBusy=!1})["catch"](function(t){return n.uberConnect.isBusy=!1,console.log(t),!0})}},angular.element(".start input.geoField").geocomplete({details:".start .details"}).bind("geocode:result",function(t,e){var r=angular.element(".start .details input.lat").val(),a=angular.element(".start .details input.lng").val(),o=angular.element(".start .details input.formatted_address").val();r&&a&&(n.updateStartLocation(r,a,o),n.drawRoute())}),angular.element(".end input.geoField").geocomplete({details:".end .details"}).bind("geocode:result",function(t,e){var r=angular.element(".end .details input.lat").val(),a=angular.element(".end .details input.lng").val(),o=angular.element(".end .details input.formatted_address").val();r&&a&&(n.updateEndLocation(r,a,o),n.drawRoute())}),n.updateStartLocation=function(e,r,a){e=parseFloat(e).toFixed(10),r=parseFloat(r).toFixed(10),a&&(a=a.toString()),e&&r&&(n.priceEstimator.start_latitude=e,n.priceEstimator.start_longitude=r,n.priceEstimator.start_formatted_address=a,t.map._addMarker(e,r,a),t.map._setCenter(e,r))},n.updateEndLocation=function(e,r,a){e=parseFloat(e).toFixed(10),r=parseFloat(r).toFixed(10),a&&(a=a.toString()),e&&r&&(n.priceEstimator.end_latitude=e,n.priceEstimator.end_longitude=r,n.priceEstimator.end_formatted_address=a,t.map._addMarker(e,r,a))},n.drawRoute=function(){n.priceEstimator.start_latitude&&n.priceEstimator.end_latitude&&(t.map._setCenter(n.priceEstimator.start_latitude,n.priceEstimator.start_longitude),t.map._drawRoute([n.priceEstimator.start_latitude,n.priceEstimator.start_longitude],[n.priceEstimator.end_latitude,n.priceEstimator.end_longitude]))},n.startAtMyLocation=function(){return Promise.resolve().then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:t.map._getMyPosition(t.map).then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:(t.main.showToast("warning","Could not find your position"),null)})}).then(function(t){t&&(n.priceEstimator.start_latitude=t[0],n.priceEstimator.start_longitude=t[1])})["catch"](function(e){console.log(e),t.main.showToast("warning","An error occurred while trying to pin point your location")})},n.endAtMyLocation=function(){return Promise.resolve().then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:t.map._getMyPosition(t.map).then(function(){return t.main.userLocation.latitude&&t.main.userLocation.longitude?[t.main.userLocation.latitude,t.main.userLocation.longitude]:(t.main.showToast("warning","Could not find your position"),null)})}).then(function(t){t&&(n.priceEstimator.end_latitude=t[0],n.priceEstimator.end_longitude=t[1])})["catch"](function(e){console.log(e),t.main.showToast("warning","An error occurred while trying to pin point your location")})}}}}]).directive("priceEstimatorDirective",["$rootScope","$http",function(t,e){return{restrict:"AE",link:function(t){}}}]).controller("mainMapController",["$rootScope","$http","$scope",function(t,e,n){function r(){angular.element("body.homepage #map").css({height:angular.element(window).height()-angular.element("homepage main-navigation").height(),margin:0,"padding-left":0})}r(),angular.element(window).resize(function(){r()}),GMaps.prototype._getMyPosition=function(e){return new Promise(function(n,r){GMaps.geolocate({success:function(n){t.main.updateUserLocation(n.coords.latitude,n.coords.longitude),e._setCenter(n.coords.latitude,n.coords.longitude),a=e._addMarker({lat:n.coords.latitude,lng:n.coords.longitude,title:""})},error:function(t){alert("Geolocation failed: "+t.message)},not_supported:function(){alert("Your browser does not support geolocation")},always:function(){n(!0)}})})},GMaps.prototype._addMarker=function(t,e,n){return this.addMarker({lat:t,lng:e,title:n||""})},GMaps.prototype._removeMarker=function(t){t.setMap(null)},GMaps.prototype._setCenter=function(t,e){this.setCenter(t,e)},GMaps.prototype._drawRoute=function(t,e){t&&e&&(t.length<2||e.length<2||(this.cleanRoute(),this.removeMarkers(),this.addMarker({lat:t[0],lng:t[1]}),this.addMarker({lat:e[0],lng:e[1]}),this.drawRoute({origin:t,destination:e,travelMode:"driving",strokeColor:"#09091A",strokeOpacity:.6,strokeWeight:6})))},t.map=new GMaps({div:"#map",lat:-12.043333,lng:-77.028333});var a;n.$watch(function(){return t.main.userLocation.latitude},function(){a&&a.setPosition(new google.maps.LatLng(t.main.userLocation.latitude,t.main.userLocation.longitude))}),t.map._getMyPosition(t.map)}]),angular.module("app").filter("responseFilter",["$q","$log","$window","$rootScope","ngDialog",function(t,e,n,r,a){return function(t){function o(t,e,n){return{show:t?!0:!1,bannerClass:e,msg:n}}function i(){a.open({template:"/dialog/not-authorized.html",className:"ngdialog-theme-default",overlay:!0,showClose:!1,closeByEscape:!0,closeByDocument:!0,cache:!1,trapFocus:!0,preserveFocus:!0})}function s(t){a.openConfirm({data:{message:t},template:"/dialog/sign-in.html",className:"ngdialog-theme-default",overlay:!0,showClose:!1,closeByEscape:!1,closeByDocument:!1,cache:!0,trapFocus:!0,preserveFocus:!0}).then(function(){r.main.redirectToPage("/notLoggedIn")},function(){r.main.redirectToPage("/about")})}if(null!==t&&"object"==typeof t){if(t.redirect&&(t.redirectPage&&(n.location.href=t.redirectPage),t.redirectState&&r.main.changeState(t.redirectState)),t.reload&&r.main.reloadPage(),t.notify&&t.type&&t.msg&&r.main.showToast(t.type,t.msg),t.dialog&&t.id)switch(t.id){case"not-authorized":i();break;case"sign-in":s(t.msg)}t.banner&&t.bannerClass&&t.msg&&r.$broadcast("universalBanner",o(!0,t.bannerClass,t.msg)),t.signInBanner&&t.bannerClass&&t.msg&&r.$broadcast("signInBanner",o(!0,t.bannerClass,t.msg)),t.registrationBanner&&t.bannerClass&&t.msg&&r.$broadcast("registrationBanner",o(!0,t.bannerClass,t.msg)),t.reason&&e.warn(t.reason)}return!0}}]);
//# sourceMappingURL=app.min.js.map
